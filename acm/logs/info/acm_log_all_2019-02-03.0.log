2019-02-03 01:54:52.397 WARN  --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:758 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h29s180ms968µs882ns).
2019-02-03 01:54:52.411 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 01:54:54.397 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@258d6fd8: (connection has passed maxLifetime)
2019-02-03 01:54:54.405 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@51a56562: (connection has passed maxLifetime)
2019-02-03 01:54:54.486 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@52603083
2019-02-03 01:54:54.610 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@26105bad: (connection has passed maxLifetime)
2019-02-03 01:54:54.611 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@79fe92f2: (connection has passed maxLifetime)
2019-02-03 01:54:54.612 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@55025142: (connection has passed maxLifetime)
2019-02-03 01:54:54.612 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@dfed69c: (connection has passed maxLifetime)
2019-02-03 01:54:54.612 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@113caa02: (connection has passed maxLifetime)
2019-02-03 01:54:54.614 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@26bf367e
2019-02-03 01:54:54.615 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@21da3250: (connection has passed maxLifetime)
2019-02-03 01:54:54.615 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@52cffa28: (connection has passed maxLifetime)
2019-02-03 01:54:54.616 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@128e31a8: (connection has passed maxLifetime)
2019-02-03 01:54:54.619 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@395f3f0
2019-02-03 01:54:54.622 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@73034010
2019-02-03 01:54:54.626 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@39e2b686
2019-02-03 01:54:54.822 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2a79b245
2019-02-03 01:54:54.825 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1586a4f1
2019-02-03 01:54:54.830 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2498695b
2019-02-03 01:54:54.833 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2d05b319
2019-02-03 01:54:54.837 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7a9b1642
2019-02-03 14:04:42.474 WARN  --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:758 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12h10m4s963ms67µs398ns).
2019-02-03 14:04:42.474 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:04:42.519 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@395f3f0: (connection has passed maxLifetime)
2019-02-03 14:04:42.520 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2498695b: (connection has passed maxLifetime)
2019-02-03 14:04:42.520 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@26bf367e: (connection has passed maxLifetime)
2019-02-03 14:04:42.521 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2d05b319: (connection has passed maxLifetime)
2019-02-03 14:04:42.521 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7a9b1642: (connection has passed maxLifetime)
2019-02-03 14:04:42.522 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@52603083: (connection has passed maxLifetime)
2019-02-03 14:04:42.523 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@39e2b686: (connection has passed maxLifetime)
2019-02-03 14:04:42.523 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2a79b245: (connection has passed maxLifetime)
2019-02-03 14:04:42.524 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1cf1fe98
2019-02-03 14:04:42.524 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@73034010: (connection has passed maxLifetime)
2019-02-03 14:04:42.525 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1586a4f1: (connection has passed maxLifetime)
2019-02-03 14:04:42.528 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@68e0aef8
2019-02-03 14:04:42.531 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@42f34c74
2019-02-03 14:04:42.534 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3d925150
2019-02-03 14:04:42.537 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@77fae5e0
2019-02-03 14:04:42.540 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@b326da6
2019-02-03 14:04:42.543 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@74610341
2019-02-03 14:04:42.547 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1dceaa1a
2019-02-03 14:04:42.550 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@76af43ac
2019-02-03 14:04:42.552 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5d7ca620
2019-02-03 14:05:12.520 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:05:42.522 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:06:12.523 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:06:42.524 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:07:12.526 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:07:42.526 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:08:12.528 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:08:42.530 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:09:12.531 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:09:42.533 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:10:12.534 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:10:42.535 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:11:12.536 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:11:42.537 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:12:12.539 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:12:42.540 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:13:12.541 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:13:42.542 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:14:12.544 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:14:42.544 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:15:12.546 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:15:42.547 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:15:51.411 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:15:52.459 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID29aa2542cccc4255b80ffbd2bb8b00d5
2019-02-03 14:15:52.460 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:15:52.461 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:15:52.462 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:15:52.462 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:15:52.463 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:15:52.463 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:15:52.463 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:15:52.463 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:15:52.464 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:16:00.047 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:16:00.048 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:58  - -----------token:29aa2542cccc4255b80ffbd2bb8b00d5
2019-02-03 14:16:00.049 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:59  - usernamegyt
2019-02-03 14:16:00.052 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:16:00.053 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da0a62d]
2019-02-03 14:16:00.054 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@900414190 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:16:00.054 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.username=? AND a.isEffective=? 
2019-02-03 14:16:00.055 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: gyt(String), 1(Integer)
2019-02-03 14:16:00.057 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:16:00.058 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da0a62d]
2019-02-03 14:16:00.058 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da0a62d]
2019-02-03 14:16:00.059 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da0a62d]
2019-02-03 14:16:00.059 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da0a62d]
2019-02-03 14:16:00.064 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:68  - gyt
2019-02-03 14:16:00.064 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:69  - userId-----------------2
2019-02-03 14:16:00.072 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.072 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.072 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:16:00.072 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:16:00.073 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.073 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2019-02-03 14:16:00.074 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:16:00.074 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.074 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:16:00.079 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.079 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.080 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:16:00.080 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:16:00.081 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.082 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:16:00.082 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:16:00.082 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.082 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:16:00.083 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.084 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.084 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:16:00.084 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:16:00.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:16:00.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:16:00.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:00.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@21536e67, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:16:01.630 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:16:01.631 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:16:01.631 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.631 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.632 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:16:01.632 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:16:01.632 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.632 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:16:01.633 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:16:01.633 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.633 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@7791706d, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:16:01.633 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.633 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.634 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:16:01.634 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:16:01.634 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.634 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:16:01.634 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:16:01.635 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:16:01.635 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@446223d5, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:16:01.635 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:16:01.635 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:16:01.636 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8461988]
2019-02-03 14:16:01.636 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1555235245 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:16:01.636 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:16:01.637 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:16:01.638 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:16:01.638 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8461988]
2019-02-03 14:16:01.638 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8461988]
2019-02-03 14:16:01.638 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8461988]
2019-02-03 14:16:01.639 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8461988]
2019-02-03 14:16:01.686 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:16:12.548 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:16:42.550 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:17:12.551 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:17:13.331 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:17:13.331 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:17:13.332 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.332 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.333 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:17:13.333 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:17:13.334 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.334 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:17:13.334 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:17:13.335 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.335 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@26a738bd, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:17:13.335 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.336 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.336 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:17:13.336 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:17:13.337 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.338 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:17:13.338 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:17:13.338 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.338 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@1c3d4a58, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:17:13.338 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:17:13.339 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:13.340 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed9326a]
2019-02-03 14:17:13.341 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1931426550 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:13.341 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:17:13.342 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:17:13.343 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:17:13.343 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed9326a]
2019-02-03 14:17:13.344 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed9326a]
2019-02-03 14:17:13.344 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed9326a]
2019-02-03 14:17:13.344 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed9326a]
2019-02-03 14:17:13.345 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:17:13.932 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:17:13.933 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.934 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.934 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:17:13.934 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:17:13.935 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.935 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:17:13.935 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:17:13.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:13.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:17:13.936 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:13.937 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc297c7]
2019-02-03 14:17:13.937 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1159384062 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:13.937 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:17:13.938 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:17:13.939 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:17:13.939 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc297c7]
2019-02-03 14:17:13.940 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc297c7]
2019-02-03 14:17:13.940 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc297c7]
2019-02-03 14:17:13.940 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc297c7]
2019-02-03 14:17:13.942 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:13.942 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50151627]
2019-02-03 14:17:13.943 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@374754717 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:13.944 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:17:13.944 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:17:13.946 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:17:13.946 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50151627]
2019-02-03 14:17:13.946 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50151627]
2019-02-03 14:17:13.947 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50151627]
2019-02-03 14:17:13.947 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50151627]
2019-02-03 14:17:13.948 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:13.949 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7474551b]
2019-02-03 14:17:13.949 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@587849733 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:13.950 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:17:13.950 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:17:13.952 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:17:13.952 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7474551b]
2019-02-03 14:17:13.953 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7474551b]
2019-02-03 14:17:13.953 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7474551b]
2019-02-03 14:17:13.953 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7474551b]
2019-02-03 14:17:13.954 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:13.954 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ced4262]
2019-02-03 14:17:13.955 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1271704397 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:13.955 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:17:13.956 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:17:13.956 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:17:13.957 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ced4262]
2019-02-03 14:17:13.957 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ced4262]
2019-02-03 14:17:13.957 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ced4262]
2019-02-03 14:17:13.957 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ced4262]
2019-02-03 14:17:13.958 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:13.958 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3673a64a]
2019-02-03 14:17:13.959 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1478564191 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:13.959 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:17:13.959 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:17:13.960 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:17:13.960 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3673a64a]
2019-02-03 14:17:13.960 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3673a64a]
2019-02-03 14:17:13.961 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3673a64a]
2019-02-03 14:17:13.961 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3673a64a]
2019-02-03 14:17:13.987 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------GET
2019-02-03 14:17:13.990 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------GET
2019-02-03 14:17:18.321 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:17:18.321 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:17:18.322 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.322 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.322 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:17:18.322 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:17:18.323 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.323 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:17:18.323 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:17:18.324 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.324 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@60d353aa, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:17:18.324 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.324 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.325 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:17:18.325 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:17:18.325 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.326 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:17:18.326 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:17:18.326 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:17:18.326 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@35faa8ee, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:17:18.326 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:17:18.327 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:17:18.327 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7430c31b]
2019-02-03 14:17:18.327 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1903334865 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:17:18.328 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:17:18.328 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:17:18.329 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:17:18.329 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7430c31b]
2019-02-03 14:17:18.329 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7430c31b]
2019-02-03 14:17:18.330 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7430c31b]
2019-02-03 14:17:18.330 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7430c31b]
2019-02-03 14:17:18.331 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:17:42.552 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:18:06.525 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:18:06.525 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:18:06.526 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.526 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.527 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:06.527 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:06.527 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.528 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:18:06.528 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:06.528 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.528 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@2a871c3c, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:06.529 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.529 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.529 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:06.529 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:06.530 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:18:06.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:06.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:06.532 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@5c9efcbe, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:06.532 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:18:06.533 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:06.533 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ff3809]
2019-02-03 14:18:06.534 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@10180704 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:06.534 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:18:06.534 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:18:06.535 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:18:06.536 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ff3809]
2019-02-03 14:18:06.536 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ff3809]
2019-02-03 14:18:06.536 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ff3809]
2019-02-03 14:18:06.537 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ff3809]
2019-02-03 14:18:06.537 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:18:07.089 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:18:07.090 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:07.091 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:07.091 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:07.091 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:07.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:07.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:18:07.093 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:07.093 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:07.093 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:07.094 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:07.094 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfa818]
2019-02-03 14:18:07.095 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@879830147 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:07.096 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:18:07.096 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:18:07.098 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:18:07.098 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfa818]
2019-02-03 14:18:07.099 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfa818]
2019-02-03 14:18:07.099 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfa818]
2019-02-03 14:18:07.099 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfa818]
2019-02-03 14:18:07.100 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:07.101 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a337]
2019-02-03 14:18:07.101 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@725406183 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:07.101 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:18:07.102 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:18:07.103 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:18:07.103 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a337]
2019-02-03 14:18:07.104 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a337]
2019-02-03 14:18:07.104 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a337]
2019-02-03 14:18:07.104 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a337]
2019-02-03 14:18:07.106 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:07.106 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c85ce11]
2019-02-03 14:18:07.106 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1075846582 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:07.107 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:18:07.107 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:18:07.109 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:18:07.109 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c85ce11]
2019-02-03 14:18:07.109 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c85ce11]
2019-02-03 14:18:07.110 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c85ce11]
2019-02-03 14:18:07.110 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c85ce11]
2019-02-03 14:18:07.112 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:07.112 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be4490a]
2019-02-03 14:18:07.113 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@937400153 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:07.113 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:18:07.114 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:18:07.115 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:18:07.115 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be4490a]
2019-02-03 14:18:07.116 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be4490a]
2019-02-03 14:18:07.116 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be4490a]
2019-02-03 14:18:07.116 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be4490a]
2019-02-03 14:18:07.117 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:07.118 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa2f90a]
2019-02-03 14:18:07.118 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@459591230 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:07.119 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:18:07.119 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:18:07.120 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:18:07.121 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa2f90a]
2019-02-03 14:18:07.121 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa2f90a]
2019-02-03 14:18:07.121 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa2f90a]
2019-02-03 14:18:07.122 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa2f90a]
2019-02-03 14:18:12.553 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:18:20.680 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:18:20.682 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:20.682 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:20.683 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:20.683 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:20.683 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:20.684 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:18:20.684 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:20.684 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:20.684 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:20.685 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:20.685 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@195fbe95]
2019-02-03 14:18:20.686 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@690334441 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:20.686 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:18:20.687 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:18:20.688 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:18:20.688 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@195fbe95]
2019-02-03 14:18:20.689 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@195fbe95]
2019-02-03 14:18:20.689 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@195fbe95]
2019-02-03 14:18:20.689 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@195fbe95]
2019-02-03 14:18:20.690 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:20.691 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75452e5a]
2019-02-03 14:18:20.691 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@888720217 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:20.692 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:18:20.692 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:18:20.693 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:18:20.694 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75452e5a]
2019-02-03 14:18:20.694 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75452e5a]
2019-02-03 14:18:20.695 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75452e5a]
2019-02-03 14:18:20.695 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75452e5a]
2019-02-03 14:18:20.696 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:20.697 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d7d0f1]
2019-02-03 14:18:20.697 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1625026350 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:20.698 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:18:20.698 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:18:20.699 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:18:20.699 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d7d0f1]
2019-02-03 14:18:20.699 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d7d0f1]
2019-02-03 14:18:20.699 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d7d0f1]
2019-02-03 14:18:20.700 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d7d0f1]
2019-02-03 14:18:20.700 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:20.701 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbe8d7a]
2019-02-03 14:18:20.701 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@299089783 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:20.701 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:18:20.701 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:18:20.702 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:18:20.702 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbe8d7a]
2019-02-03 14:18:20.703 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbe8d7a]
2019-02-03 14:18:20.703 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbe8d7a]
2019-02-03 14:18:20.703 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbe8d7a]
2019-02-03 14:18:20.704 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:20.704 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6057cf00]
2019-02-03 14:18:20.704 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@696339904 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:20.704 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:18:20.705 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:18:20.705 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:18:20.705 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6057cf00]
2019-02-03 14:18:20.706 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6057cf00]
2019-02-03 14:18:20.706 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6057cf00]
2019-02-03 14:18:20.706 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6057cf00]
2019-02-03 14:18:24.781 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:18:24.782 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:18:24.782 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.782 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.783 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:24.783 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:24.783 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.784 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:18:24.784 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:24.784 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.784 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@262aba84, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:24.784 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.784 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.785 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:24.785 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:24.792 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.793 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:18:24.793 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:24.793 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:24.793 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@5c1bdc3f, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:24.793 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:18:24.794 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:24.794 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b15409c]
2019-02-03 14:18:24.795 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@39805429 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:24.796 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:18:24.797 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:18:24.798 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:18:24.798 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b15409c]
2019-02-03 14:18:24.798 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b15409c]
2019-02-03 14:18:24.798 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b15409c]
2019-02-03 14:18:24.799 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b15409c]
2019-02-03 14:18:24.799 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:18:29.937 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:18:29.938 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:18:29.938 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.938 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.939 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:29.938 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:29.939 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.939 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:18:29.940 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:29.940 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.940 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@22c6c334, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:29.940 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.940 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:18:29.941 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:18:29.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:18:29.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:18:29.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:18:29.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@66145dd, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:18:29.942 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:18:29.943 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:18:29.943 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ab7623]
2019-02-03 14:18:29.943 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@350518205 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:18:29.944 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:18:29.944 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:18:29.945 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:18:29.945 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ab7623]
2019-02-03 14:18:29.945 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ab7623]
2019-02-03 14:18:29.946 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ab7623]
2019-02-03 14:18:29.946 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ab7623]
2019-02-03 14:18:29.947 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:18:42.555 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:19:12.556 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:19:42.558 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:20:12.558 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:20:42.560 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:21:12.562 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:21:42.564 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:22:12.565 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:22:42.565 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:23:12.567 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:23:42.568 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:24:12.570 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:24:42.571 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:25:06.309 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:25:06.310 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:25:06.310 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.311 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.311 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:06.311 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:06.312 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.313 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:25:06.313 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:06.313 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.314 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@5e0765c6, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:25:06.314 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.314 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.314 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:06.314 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:06.316 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.316 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:25:06.316 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:06.317 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:06.317 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@5cffb01d, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:25:06.317 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:25:06.318 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:06.318 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70824d61]
2019-02-03 14:25:06.319 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@316792182 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:06.319 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:25:06.320 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:25:06.321 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:25:06.322 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70824d61]
2019-02-03 14:25:06.322 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70824d61]
2019-02-03 14:25:06.322 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70824d61]
2019-02-03 14:25:06.323 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70824d61]
2019-02-03 14:25:06.323 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:25:07.082 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:25:07.083 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:07.083 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:07.084 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:07.084 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:07.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:07.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:25:07.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:07.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:07.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:25:07.087 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:07.088 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85cd772]
2019-02-03 14:25:07.088 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1676690344 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:07.089 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:25:07.089 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:25:07.091 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:25:07.092 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85cd772]
2019-02-03 14:25:07.093 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85cd772]
2019-02-03 14:25:07.093 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85cd772]
2019-02-03 14:25:07.094 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85cd772]
2019-02-03 14:25:07.096 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:07.097 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a824c6]
2019-02-03 14:25:07.097 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1715511586 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:07.098 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:25:07.099 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:25:07.100 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:25:07.100 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a824c6]
2019-02-03 14:25:07.101 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a824c6]
2019-02-03 14:25:07.101 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a824c6]
2019-02-03 14:25:07.101 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a824c6]
2019-02-03 14:25:07.102 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:07.103 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ba0476]
2019-02-03 14:25:07.103 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1952534843 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:07.104 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:25:07.104 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:25:07.106 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:25:07.106 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ba0476]
2019-02-03 14:25:07.107 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ba0476]
2019-02-03 14:25:07.107 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ba0476]
2019-02-03 14:25:07.108 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ba0476]
2019-02-03 14:25:07.109 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:07.109 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d08221]
2019-02-03 14:25:07.110 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@131830584 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:07.111 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:25:07.111 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:25:07.112 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:25:07.112 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d08221]
2019-02-03 14:25:07.113 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d08221]
2019-02-03 14:25:07.113 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d08221]
2019-02-03 14:25:07.113 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d08221]
2019-02-03 14:25:07.114 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:07.114 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3702778b]
2019-02-03 14:25:07.114 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@74278930 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:07.115 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:25:07.115 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:25:07.116 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:25:07.116 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3702778b]
2019-02-03 14:25:07.117 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3702778b]
2019-02-03 14:25:07.117 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3702778b]
2019-02-03 14:25:07.117 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3702778b]
2019-02-03 14:25:12.572 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:25:26.586 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:25:26.586 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:25:26.587 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.587 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.588 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:26.588 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:26.588 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.589 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:25:26.589 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:26.589 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.589 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@483407d5, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:25:26.590 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.590 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.590 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:26.590 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:26.591 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.591 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:25:26.592 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:26.592 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:26.592 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@44f7eca3, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:25:26.592 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:25:26.593 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:26.593 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca34b5]
2019-02-03 14:25:26.593 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@192977791 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:26.594 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:25:26.594 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:25:26.595 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:25:26.596 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca34b5]
2019-02-03 14:25:26.596 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca34b5]
2019-02-03 14:25:26.597 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca34b5]
2019-02-03 14:25:26.597 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca34b5]
2019-02-03 14:25:26.598 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:25:27.307 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:25:27.308 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:27.308 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:27.308 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:27.309 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:27.309 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:27.310 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:25:27.310 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:27.310 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:27.310 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:25:27.311 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:27.312 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd9626]
2019-02-03 14:25:27.312 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@229985527 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:27.312 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:25:27.313 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:25:27.314 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:25:27.315 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd9626]
2019-02-03 14:25:27.315 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd9626]
2019-02-03 14:25:27.315 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd9626]
2019-02-03 14:25:27.316 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd9626]
2019-02-03 14:25:27.317 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:27.318 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7184a3]
2019-02-03 14:25:27.318 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@852907223 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:27.319 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:25:27.319 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:25:27.321 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:25:27.321 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7184a3]
2019-02-03 14:25:27.322 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7184a3]
2019-02-03 14:25:27.322 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7184a3]
2019-02-03 14:25:27.323 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7184a3]
2019-02-03 14:25:27.324 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:27.325 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a06724]
2019-02-03 14:25:27.325 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@41755290 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:27.326 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:25:27.326 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:25:27.329 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:25:27.330 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a06724]
2019-02-03 14:25:27.330 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a06724]
2019-02-03 14:25:27.331 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a06724]
2019-02-03 14:25:27.331 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a06724]
2019-02-03 14:25:27.332 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:27.332 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c8c29a]
2019-02-03 14:25:27.333 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@170073878 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:27.333 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:25:27.334 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:25:27.335 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:25:27.335 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c8c29a]
2019-02-03 14:25:27.336 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c8c29a]
2019-02-03 14:25:27.336 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c8c29a]
2019-02-03 14:25:27.336 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c8c29a]
2019-02-03 14:25:27.337 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:25:27.338 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddce9ad]
2019-02-03 14:25:27.338 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@324423279 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:25:27.339 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:25:27.339 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:25:27.341 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:25:27.341 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddce9ad]
2019-02-03 14:25:27.342 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddce9ad]
2019-02-03 14:25:27.342 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddce9ad]
2019-02-03 14:25:27.343 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddce9ad]
2019-02-03 14:25:42.573 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:25:50.970 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:25:50.970 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:25:50.971 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:50.971 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:50.971 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:25:50.971 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:25:50.972 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:50.972 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:25:50.972 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:25:50.973 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:25:50.973 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:05.338 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:05.339 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:26:05.339 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.340 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.340 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:05.340 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:05.341 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.342 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:26:05.342 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:05.342 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.343 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@21bb88ae, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:05.343 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.343 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.344 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:05.343 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:05.344 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.345 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:26:05.345 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:05.345 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.345 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@65bbdc, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:05.346 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:26:05.346 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:05.347 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61b3dae5]
2019-02-03 14:26:05.348 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@713047380 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:05.348 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:26:05.349 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:26:05.350 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:26:05.351 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61b3dae5]
2019-02-03 14:26:05.351 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61b3dae5]
2019-02-03 14:26:05.351 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61b3dae5]
2019-02-03 14:26:05.352 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61b3dae5]
2019-02-03 14:26:05.353 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:26:05.836 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:05.837 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.838 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.838 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:05.838 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:05.840 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.841 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:26:05.841 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:05.841 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:05.841 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:05.842 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:05.843 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c66a2]
2019-02-03 14:26:05.843 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@297480975 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:05.844 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:26:05.844 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:26:05.846 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:26:05.847 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c66a2]
2019-02-03 14:26:05.847 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c66a2]
2019-02-03 14:26:05.847 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c66a2]
2019-02-03 14:26:05.848 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c66a2]
2019-02-03 14:26:05.849 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:05.849 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30162dc]
2019-02-03 14:26:05.850 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@650064545 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:05.850 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:26:05.851 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:26:05.852 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:26:05.852 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30162dc]
2019-02-03 14:26:05.852 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30162dc]
2019-02-03 14:26:05.853 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30162dc]
2019-02-03 14:26:05.854 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30162dc]
2019-02-03 14:26:05.855 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:05.855 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac8fe6c]
2019-02-03 14:26:05.856 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1144387871 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:05.856 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:26:05.857 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:26:05.858 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:26:05.858 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac8fe6c]
2019-02-03 14:26:05.859 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac8fe6c]
2019-02-03 14:26:05.859 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac8fe6c]
2019-02-03 14:26:05.859 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac8fe6c]
2019-02-03 14:26:05.860 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:05.861 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5669a404]
2019-02-03 14:26:05.861 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@841909390 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:05.862 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:26:05.862 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:26:05.863 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:26:05.864 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5669a404]
2019-02-03 14:26:05.864 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5669a404]
2019-02-03 14:26:05.865 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5669a404]
2019-02-03 14:26:05.865 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5669a404]
2019-02-03 14:26:05.866 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:05.867 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@198327f5]
2019-02-03 14:26:05.867 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1642005790 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:05.868 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:26:05.868 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:26:05.869 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:26:05.870 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@198327f5]
2019-02-03 14:26:05.870 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@198327f5]
2019-02-03 14:26:05.870 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@198327f5]
2019-02-03 14:26:05.871 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@198327f5]
2019-02-03 14:26:08.204 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:08.205 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:26:08.205 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:08.205 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:08.206 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:08.206 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:08.206 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:08.207 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:26:08.207 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:08.207 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:08.207 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:12.574 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:26:17.030 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:17.031 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:26:17.031 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:17.031 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:17.032 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:17.032 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:17.032 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:17.033 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:26:17.033 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:17.033 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:17.033 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:42.575 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:26:47.242 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:47.243 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:26:47.244 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.245 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.245 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:47.245 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:47.246 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.247 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:26:47.247 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:47.247 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.247 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@68871eaa, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:47.248 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.248 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.249 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:47.249 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:47.357 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.358 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:26:47.358 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:47.358 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:47.359 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@136e65ed, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:47.359 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:26:47.360 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:47.360 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753502a5]
2019-02-03 14:26:47.361 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1763365546 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:47.362 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:26:47.363 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:26:47.365 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:26:47.366 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753502a5]
2019-02-03 14:26:47.366 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753502a5]
2019-02-03 14:26:47.366 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753502a5]
2019-02-03 14:26:47.366 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753502a5]
2019-02-03 14:26:47.367 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:26:48.051 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:48.051 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:26:48.052 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.052 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.053 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:48.053 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:48.058 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.059 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:26:48.059 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:48.060 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.060 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:48.120 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:48.121 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.121 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.122 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:48.122 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:48.123 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.123 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:26:48.123 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:48.124 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:48.124 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:48.125 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:48.125 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632d38b5]
2019-02-03 14:26:48.125 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@731923629 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:48.126 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:26:48.127 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:26:48.129 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:26:48.130 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632d38b5]
2019-02-03 14:26:48.130 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632d38b5]
2019-02-03 14:26:48.131 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632d38b5]
2019-02-03 14:26:48.131 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632d38b5]
2019-02-03 14:26:48.133 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:48.133 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3320d5b0]
2019-02-03 14:26:48.133 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1111833219 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:48.134 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:26:48.134 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:26:48.135 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:26:48.135 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3320d5b0]
2019-02-03 14:26:48.135 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3320d5b0]
2019-02-03 14:26:48.135 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3320d5b0]
2019-02-03 14:26:48.136 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3320d5b0]
2019-02-03 14:26:48.136 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:48.137 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6a5bcc]
2019-02-03 14:26:48.137 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@260479434 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:48.137 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:26:48.138 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:26:48.138 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:26:48.138 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6a5bcc]
2019-02-03 14:26:48.139 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6a5bcc]
2019-02-03 14:26:48.139 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6a5bcc]
2019-02-03 14:26:48.139 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6a5bcc]
2019-02-03 14:26:48.139 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:48.140 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6989795a]
2019-02-03 14:26:48.140 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2030957342 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:48.140 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:26:48.141 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:26:48.141 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:26:48.142 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6989795a]
2019-02-03 14:26:48.142 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6989795a]
2019-02-03 14:26:48.142 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6989795a]
2019-02-03 14:26:48.142 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6989795a]
2019-02-03 14:26:48.143 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:48.143 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@249f4e45]
2019-02-03 14:26:48.144 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1732394307 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:48.145 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:26:48.145 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:26:48.146 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:26:48.147 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@249f4e45]
2019-02-03 14:26:48.147 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@249f4e45]
2019-02-03 14:26:48.147 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@249f4e45]
2019-02-03 14:26:48.147 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@249f4e45]
2019-02-03 14:26:52.466 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:52.470 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:26:52.470 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.471 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.471 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:52.471 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:52.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:26:52.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:52.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.473 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@6eed71d6, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:52.473 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.474 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.475 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:52.474 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:52.475 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.476 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:26:52.476 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:52.476 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:52.476 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@437b8c8c, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:26:52.476 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:26:52.477 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:26:52.477 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb95a4]
2019-02-03 14:26:52.478 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1819208869 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:26:52.478 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:26:52.478 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:26:52.479 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:26:52.480 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb95a4]
2019-02-03 14:26:52.480 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb95a4]
2019-02-03 14:26:52.480 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb95a4]
2019-02-03 14:26:52.480 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb95a4]
2019-02-03 14:26:52.482 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:26:58.576 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:26:58.577 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:26:58.578 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:58.578 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:58.579 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:26:58.578 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:26:58.580 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:58.580 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:26:58.581 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:26:58.581 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:26:58.581 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:27:12.577 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:27:42.578 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:28:12.579 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:28:42.581 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:28:50.376 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:28:50.377 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:28:50.378 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.379 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.379 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:28:50.379 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:28:50.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.381 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:28:50.381 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:28:50.381 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.381 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@13d9a807, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:28:50.382 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.382 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.383 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:28:50.383 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:28:50.383 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.384 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:28:50.384 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:28:50.384 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.384 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@7378e69c, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:28:50.385 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:28:50.386 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:28:50.387 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be008f]
2019-02-03 14:28:50.387 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1890095317 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:28:50.388 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:28:50.388 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:28:50.390 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:28:50.391 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be008f]
2019-02-03 14:28:50.391 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be008f]
2019-02-03 14:28:50.391 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be008f]
2019-02-03 14:28:50.391 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be008f]
2019-02-03 14:28:50.392 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:28:50.412 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:28:50.413 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:28:50.413 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.413 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.414 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:28:50.414 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:28:50.414 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.415 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:28:50.415 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:28:50.415 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:50.416 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:28:51.130 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:28:51.131 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:51.131 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:51.131 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:28:51.131 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:28:51.132 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:51.133 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:28:51.136 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:28:51.136 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:28:51.136 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:28:51.137 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:28:51.137 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751abe6]
2019-02-03 14:28:51.138 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1174926488 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:28:51.139 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:28:51.139 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:28:51.140 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:28:51.140 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751abe6]
2019-02-03 14:28:51.141 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751abe6]
2019-02-03 14:28:51.141 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751abe6]
2019-02-03 14:28:51.141 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751abe6]
2019-02-03 14:28:51.142 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:28:51.142 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f31b54]
2019-02-03 14:28:51.142 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@117006415 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:28:51.143 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:28:51.143 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:28:51.144 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:28:51.144 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f31b54]
2019-02-03 14:28:51.145 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f31b54]
2019-02-03 14:28:51.145 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f31b54]
2019-02-03 14:28:51.145 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f31b54]
2019-02-03 14:28:51.147 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:28:51.147 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1b2620]
2019-02-03 14:28:51.148 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1727653006 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:28:51.148 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:28:51.148 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:28:51.149 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:28:51.149 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1b2620]
2019-02-03 14:28:51.150 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1b2620]
2019-02-03 14:28:51.150 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1b2620]
2019-02-03 14:28:51.150 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1b2620]
2019-02-03 14:28:51.151 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:28:51.151 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ec823c]
2019-02-03 14:28:51.151 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1552237128 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:28:51.152 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:28:51.152 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:28:51.153 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:28:51.153 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ec823c]
2019-02-03 14:28:51.154 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ec823c]
2019-02-03 14:28:51.154 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ec823c]
2019-02-03 14:28:51.154 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ec823c]
2019-02-03 14:28:51.155 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:28:51.155 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6188]
2019-02-03 14:28:51.155 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@825905562 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:28:51.156 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:28:51.156 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:28:51.157 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:28:51.157 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6188]
2019-02-03 14:28:51.157 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6188]
2019-02-03 14:28:51.158 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6188]
2019-02-03 14:28:51.158 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6188]
2019-02-03 14:29:10.596 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:29:10.600 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:29:10.600 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:29:10.601 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:29:10.601 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:29:10.601 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:29:10.602 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:29:10.602 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:29:10.603 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:29:10.603 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:29:10.603 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:29:12.586 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:29:42.588 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:30:12.589 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:30:42.592 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:31:12.597 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:31:42.598 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:32:12.600 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:32:26.372 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:32:26.373 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:32:26.373 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.374 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.374 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:26.374 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:26.375 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.375 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:32:26.376 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:26.376 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.376 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@769e5ae4, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:26.376 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.377 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.377 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:26.377 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:26.378 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.379 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 7 bytes, 1 commands in the stack
2019-02-03 14:32:26.379 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:26.379 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:26.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@699ea757, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:26.380 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.BaseController Line:50  - ------uID2
2019-02-03 14:32:26.384 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:26.384 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1599c706]
2019-02-03 14:32:26.385 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1571837006 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:26.385 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==>  Preparing: SELECT a.auth, a.classNum, a.createDay, a.grade, a.image, a.isEffective, a.mobile, a.openId, a.password, a.realname, a.studentId, a.userId, a.username FROM user a WHERE a.userId=? AND a.isEffective=? 
2019-02-03 14:32:26.385 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - ==> Parameters: 2(Integer), 1(Integer)
2019-02-03 14:32:26.386 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.UserMapper.findUserListByQuery Line:159 - <==      Total: 1
2019-02-03 14:32:26.387 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1599c706]
2019-02-03 14:32:26.387 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1599c706]
2019-02-03 14:32:26.388 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1599c706]
2019-02-03 14:32:26.388 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1599c706]
2019-02-03 14:32:26.389 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:105 - gyt
2019-02-03 14:32:27.013 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:32:27.014 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:27.015 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:27.016 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:27.016 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:27.016 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:27.017 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:32:27.017 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:27.017 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:27.018 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:27.018 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:27.019 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530448b5]
2019-02-03 14:32:27.019 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1311196248 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:27.020 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:32:27.020 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:32:27.022 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:32:27.022 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530448b5]
2019-02-03 14:32:27.023 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530448b5]
2019-02-03 14:32:27.024 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530448b5]
2019-02-03 14:32:27.024 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530448b5]
2019-02-03 14:32:27.025 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:27.026 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8ba8d8]
2019-02-03 14:32:27.027 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@455725947 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:27.027 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:32:27.028 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:32:27.029 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:32:27.029 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8ba8d8]
2019-02-03 14:32:27.030 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8ba8d8]
2019-02-03 14:32:27.030 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8ba8d8]
2019-02-03 14:32:27.030 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8ba8d8]
2019-02-03 14:32:27.033 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:27.033 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73aead4a]
2019-02-03 14:32:27.034 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@950745345 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:27.034 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:32:27.035 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:32:27.036 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:32:27.036 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73aead4a]
2019-02-03 14:32:27.037 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73aead4a]
2019-02-03 14:32:27.037 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73aead4a]
2019-02-03 14:32:27.037 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73aead4a]
2019-02-03 14:32:27.039 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:27.039 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45c8e081]
2019-02-03 14:32:27.040 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1885826938 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:27.040 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:32:27.041 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:32:27.042 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:32:27.042 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45c8e081]
2019-02-03 14:32:27.042 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45c8e081]
2019-02-03 14:32:27.043 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45c8e081]
2019-02-03 14:32:27.043 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45c8e081]
2019-02-03 14:32:27.044 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:27.045 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40daba3b]
2019-02-03 14:32:27.045 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1196011099 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:27.046 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:32:27.046 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:32:27.047 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:32:27.048 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40daba3b]
2019-02-03 14:32:27.048 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40daba3b]
2019-02-03 14:32:27.049 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40daba3b]
2019-02-03 14:32:27.049 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40daba3b]
2019-02-03 14:32:40.652 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:32:40.653 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:32:40.653 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:40.653 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:40.653 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:40.653 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:40.654 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:40.654 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:32:40.655 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:40.655 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:40.655 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:42.601 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:32:55.359 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:32:55.359 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:32:55.360 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.360 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.361 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:55.361 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:55.362 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.365 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:32:55.366 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:55.366 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.366 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:55.468 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:32:55.469 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:32:55.469 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.498 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.499 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:55.499 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:55.499 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:32:55.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:55.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:55.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:56.136 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:32:56.138 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:56.138 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:56.142 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:32:56.142 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:32:56.143 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:56.144 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:32:56.144 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:32:56.144 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:32:56.144 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:32:56.145 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:56.146 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc2b59a]
2019-02-03 14:32:56.147 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1169680298 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:56.147 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:32:56.148 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:32:56.150 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:32:56.151 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc2b59a]
2019-02-03 14:32:56.152 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc2b59a]
2019-02-03 14:32:56.152 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc2b59a]
2019-02-03 14:32:56.153 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc2b59a]
2019-02-03 14:32:56.154 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:56.154 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab7935]
2019-02-03 14:32:56.155 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1750127623 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:56.155 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:32:56.156 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:32:56.157 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:32:56.157 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab7935]
2019-02-03 14:32:56.158 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab7935]
2019-02-03 14:32:56.158 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab7935]
2019-02-03 14:32:56.159 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab7935]
2019-02-03 14:32:56.160 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:56.160 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2896fa13]
2019-02-03 14:32:56.162 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@825469607 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:56.162 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:32:56.162 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:32:56.163 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:32:56.163 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2896fa13]
2019-02-03 14:32:56.164 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2896fa13]
2019-02-03 14:32:56.165 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2896fa13]
2019-02-03 14:32:56.165 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2896fa13]
2019-02-03 14:32:56.166 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:56.166 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572c732f]
2019-02-03 14:32:56.166 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@701527807 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:56.167 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:32:56.167 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:32:56.168 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:32:56.168 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572c732f]
2019-02-03 14:32:56.169 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572c732f]
2019-02-03 14:32:56.169 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572c732f]
2019-02-03 14:32:56.169 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572c732f]
2019-02-03 14:32:56.170 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:32:56.170 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5644a51f]
2019-02-03 14:32:56.170 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1245002367 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:32:56.170 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:32:56.171 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:32:56.171 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:32:56.172 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5644a51f]
2019-02-03 14:32:56.172 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5644a51f]
2019-02-03 14:32:56.172 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5644a51f]
2019-02-03 14:32:56.172 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5644a51f]
2019-02-03 14:33:12.602 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:33:42.603 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:33:58.113 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@b326da6: (connection has passed maxLifetime)
2019-02-03 14:33:58.118 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6d5eb1dc
2019-02-03 14:33:59.210 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:33:59.210 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:33:59.211 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.211 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:33:59.212 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:33:59.213 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.213 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:33:59.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:33:59.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:33:59.365 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:33:59.366 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:33:59.366 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.367 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.367 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:33:59.367 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:33:59.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:33:59.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:33:59.369 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:33:59.369 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:34:00.182 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:34:00.182 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:34:00.183 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:34:00.183 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:34:00.183 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:34:00.184 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:34:00.184 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:34:00.184 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:34:00.184 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:34:00.184 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:34:00.185 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:34:00.185 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352a6d3]
2019-02-03 14:34:00.186 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1553851204 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:34:00.186 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:34:00.186 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:34:00.188 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:34:00.188 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352a6d3]
2019-02-03 14:34:00.188 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352a6d3]
2019-02-03 14:34:00.189 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352a6d3]
2019-02-03 14:34:00.189 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352a6d3]
2019-02-03 14:34:00.190 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:34:00.191 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4391afce]
2019-02-03 14:34:00.191 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1472843887 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:34:00.191 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:34:00.192 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:34:00.192 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:34:00.193 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4391afce]
2019-02-03 14:34:00.194 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4391afce]
2019-02-03 14:34:00.195 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4391afce]
2019-02-03 14:34:00.195 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4391afce]
2019-02-03 14:34:00.196 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:34:00.197 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4533ed85]
2019-02-03 14:34:00.197 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@39171307 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:34:00.198 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:34:00.198 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:34:00.199 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:34:00.200 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4533ed85]
2019-02-03 14:34:00.200 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4533ed85]
2019-02-03 14:34:00.200 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4533ed85]
2019-02-03 14:34:00.201 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4533ed85]
2019-02-03 14:34:00.202 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:34:00.202 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5452bc]
2019-02-03 14:34:00.202 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@940213100 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:34:00.203 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:34:00.203 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:34:00.204 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:34:00.204 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5452bc]
2019-02-03 14:34:00.205 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5452bc]
2019-02-03 14:34:00.205 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5452bc]
2019-02-03 14:34:00.205 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5452bc]
2019-02-03 14:34:00.206 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:34:00.206 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3448915]
2019-02-03 14:34:00.206 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@831346556 wrapping com.mysql.jdbc.JDBC4Connection@1cf1fe98] will be managed by Spring
2019-02-03 14:34:00.207 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:34:00.207 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:34:00.208 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:34:00.208 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3448915]
2019-02-03 14:34:00.209 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3448915]
2019-02-03 14:34:00.209 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3448915]
2019-02-03 14:34:00.209 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3448915]
2019-02-03 14:34:12.605 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:34:23.746 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5d7ca620: (connection has passed maxLifetime)
2019-02-03 14:34:23.750 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@752d5258
2019-02-03 14:34:24.545 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@74610341: (connection has passed maxLifetime)
2019-02-03 14:34:24.547 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1d5326b
2019-02-03 14:34:27.883 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1cf1fe98: (connection has passed maxLifetime)
2019-02-03 14:34:27.885 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1b2085c2
2019-02-03 14:34:31.677 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@68e0aef8: (connection has passed maxLifetime)
2019-02-03 14:34:31.680 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@544e0167
2019-02-03 14:34:32.794 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@42f34c74: (connection has passed maxLifetime)
2019-02-03 14:34:32.799 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@36996a7
2019-02-03 14:34:34.527 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@76af43ac: (connection has passed maxLifetime)
2019-02-03 14:34:34.535 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@979d3c7
2019-02-03 14:34:34.921 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1dceaa1a: (connection has passed maxLifetime)
2019-02-03 14:34:34.924 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@19e8f7e0
2019-02-03 14:34:35.330 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@77fae5e0: (connection has passed maxLifetime)
2019-02-03 14:34:35.332 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5a00201b
2019-02-03 14:34:38.882 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3d925150: (connection has passed maxLifetime)
2019-02-03 14:34:38.884 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@61664ca0
2019-02-03 14:34:42.607 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:35:12.609 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:35:42.610 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:36:12.612 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:36:42.614 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:37:12.616 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:37:26.438 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:26.439 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:37:26.439 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.440 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.441 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:26.441 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:26.442 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.442 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:26.442 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:26.443 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.443 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:37:26.924 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:26.931 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:37:26.932 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.933 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.934 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:26.937 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:26.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:26.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:26.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:26.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:37:27.153 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:27.153 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:27.154 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:27.155 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:27.155 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:27.155 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:27.156 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:27.156 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:27.157 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:27.157 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:37:27.158 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:27.159 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc7dab1]
2019-02-03 14:37:27.160 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@557536282 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:27.160 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:37:27.161 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:37:27.164 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:37:27.165 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc7dab1]
2019-02-03 14:37:27.165 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc7dab1]
2019-02-03 14:37:27.166 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc7dab1]
2019-02-03 14:37:27.166 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc7dab1]
2019-02-03 14:37:27.167 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:27.167 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@144222bd]
2019-02-03 14:37:27.168 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2122336832 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:27.168 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:37:27.169 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:37:27.169 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:37:27.170 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@144222bd]
2019-02-03 14:37:27.170 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@144222bd]
2019-02-03 14:37:27.170 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@144222bd]
2019-02-03 14:37:27.171 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@144222bd]
2019-02-03 14:37:27.172 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:27.172 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2418ca8b]
2019-02-03 14:37:27.172 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1487005089 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:27.173 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:37:27.174 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:37:27.176 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:37:27.177 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2418ca8b]
2019-02-03 14:37:27.177 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2418ca8b]
2019-02-03 14:37:27.178 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2418ca8b]
2019-02-03 14:37:27.178 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2418ca8b]
2019-02-03 14:37:27.181 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:27.181 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4103f454]
2019-02-03 14:37:27.182 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1349348025 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:27.182 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:37:27.183 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:37:27.184 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:37:27.185 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4103f454]
2019-02-03 14:37:27.186 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4103f454]
2019-02-03 14:37:27.186 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4103f454]
2019-02-03 14:37:27.187 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4103f454]
2019-02-03 14:37:27.189 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:27.189 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e474f3a]
2019-02-03 14:37:27.190 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1831549084 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:27.190 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:37:27.191 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:37:27.192 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:37:27.192 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e474f3a]
2019-02-03 14:37:27.193 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e474f3a]
2019-02-03 14:37:27.193 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e474f3a]
2019-02-03 14:37:27.194 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e474f3a]
2019-02-03 14:37:42.617 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:37:48.002 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:48.002 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:37:48.003 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.003 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.003 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:48.003 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:48.004 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.005 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:48.005 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:48.005 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.005 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:37:48.584 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:48.585 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:37:48.585 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.585 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.586 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:48.586 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:48.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:48.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:48.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:48.588 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:37:49.023 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:49.027 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:49.028 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:49.029 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:49.029 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:49.030 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:49.030 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:49.031 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:49.031 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:49.031 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:37:49.032 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:49.032 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5f044f]
2019-02-03 14:37:49.033 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2123843537 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:49.033 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:37:49.034 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:37:49.036 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:37:49.036 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5f044f]
2019-02-03 14:37:49.037 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5f044f]
2019-02-03 14:37:49.037 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5f044f]
2019-02-03 14:37:49.037 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5f044f]
2019-02-03 14:37:49.039 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:49.039 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f241fe]
2019-02-03 14:37:49.039 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1674804117 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:49.040 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:37:49.041 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:37:49.041 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:37:49.042 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f241fe]
2019-02-03 14:37:49.042 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f241fe]
2019-02-03 14:37:49.043 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f241fe]
2019-02-03 14:37:49.043 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f241fe]
2019-02-03 14:37:49.045 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:49.046 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27413d6e]
2019-02-03 14:37:49.046 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1490179005 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:49.047 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:37:49.047 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:37:49.048 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:37:49.049 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27413d6e]
2019-02-03 14:37:49.049 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27413d6e]
2019-02-03 14:37:49.049 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27413d6e]
2019-02-03 14:37:49.050 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27413d6e]
2019-02-03 14:37:49.051 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:49.051 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf685a]
2019-02-03 14:37:49.052 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1465120135 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:49.052 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:37:49.053 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:37:49.054 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:37:49.054 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf685a]
2019-02-03 14:37:49.055 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf685a]
2019-02-03 14:37:49.055 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf685a]
2019-02-03 14:37:49.055 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf685a]
2019-02-03 14:37:49.056 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:37:49.057 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25081d4e]
2019-02-03 14:37:49.057 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1940451217 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:37:49.058 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:37:49.058 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:37:49.059 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:37:49.060 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25081d4e]
2019-02-03 14:37:49.060 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25081d4e]
2019-02-03 14:37:49.061 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25081d4e]
2019-02-03 14:37:49.061 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25081d4e]
2019-02-03 14:37:50.760 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:37:50.761 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:37:50.761 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:50.762 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:50.762 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:37:50.762 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:37:50.763 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:50.763 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:37:50.764 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:37:50.764 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:37:50.764 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:38:07.317 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:38:07.317 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:38:07.317 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.318 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.318 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:38:07.318 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:38:07.319 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:38:07.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:38:07.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:38:07.444 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:38:07.444 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:38:07.445 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.445 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.446 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:38:07.445 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:38:07.446 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.447 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:38:07.447 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:38:07.447 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.447 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:38:07.774 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:38:07.775 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.776 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.776 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:38:07.776 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:38:07.779 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.779 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:38:07.780 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:38:07.780 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:38:07.780 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:38:07.781 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:38:07.782 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ec23f1]
2019-02-03 14:38:07.783 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@826040630 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:38:07.783 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:38:07.784 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:38:07.785 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:38:07.786 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ec23f1]
2019-02-03 14:38:07.786 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ec23f1]
2019-02-03 14:38:07.786 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ec23f1]
2019-02-03 14:38:07.787 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ec23f1]
2019-02-03 14:38:07.788 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:38:07.788 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399987d5]
2019-02-03 14:38:07.789 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@192541959 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:38:07.789 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:38:07.790 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:38:07.791 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:38:07.791 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399987d5]
2019-02-03 14:38:07.792 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399987d5]
2019-02-03 14:38:07.792 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399987d5]
2019-02-03 14:38:07.793 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399987d5]
2019-02-03 14:38:07.794 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:38:07.795 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3172d0b2]
2019-02-03 14:38:07.795 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@508431081 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:38:07.796 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:38:07.796 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:38:07.797 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:38:07.798 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3172d0b2]
2019-02-03 14:38:07.798 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3172d0b2]
2019-02-03 14:38:07.799 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3172d0b2]
2019-02-03 14:38:07.799 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3172d0b2]
2019-02-03 14:38:07.800 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:38:07.801 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e151d2]
2019-02-03 14:38:07.801 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2069609036 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:38:07.802 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:38:07.802 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:38:07.803 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:38:07.804 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e151d2]
2019-02-03 14:38:07.804 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e151d2]
2019-02-03 14:38:07.804 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e151d2]
2019-02-03 14:38:07.805 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e151d2]
2019-02-03 14:38:07.806 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:38:07.806 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6049aed2]
2019-02-03 14:38:07.807 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@169025029 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:38:07.807 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:38:07.808 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:38:07.809 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:38:07.810 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6049aed2]
2019-02-03 14:38:07.810 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6049aed2]
2019-02-03 14:38:07.810 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6049aed2]
2019-02-03 14:38:07.811 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6049aed2]
2019-02-03 14:38:12.618 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:38:42.619 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:39:12.621 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:39:42.623 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:39:54.973 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:39:54.973 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:39:54.974 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.974 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.975 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:39:54.975 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:39:54.975 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.976 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:39:54.976 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:39:54.976 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.976 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:39:54.982 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:39:54.983 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:39:54.983 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.984 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.984 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:39:54.984 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:39:54.986 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.987 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:39:54.987 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:39:54.987 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:54.988 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:39:56.155 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:39:56.157 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:56.157 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:56.158 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:39:56.158 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:39:56.159 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:56.160 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:39:56.160 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:39:56.160 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:39:56.161 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:39:56.161 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:39:56.162 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20be5dcf]
2019-02-03 14:39:56.162 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1674877247 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:39:56.163 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:39:56.164 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:39:56.166 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:39:56.166 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20be5dcf]
2019-02-03 14:39:56.167 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20be5dcf]
2019-02-03 14:39:56.167 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20be5dcf]
2019-02-03 14:39:56.167 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20be5dcf]
2019-02-03 14:39:56.168 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:39:56.169 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b8dffd]
2019-02-03 14:39:56.169 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@399817759 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:39:56.170 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:39:56.170 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:39:56.171 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:39:56.172 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b8dffd]
2019-02-03 14:39:56.172 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b8dffd]
2019-02-03 14:39:56.172 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b8dffd]
2019-02-03 14:39:56.173 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b8dffd]
2019-02-03 14:39:56.174 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:39:56.174 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20955a31]
2019-02-03 14:39:56.175 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2106810154 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:39:56.176 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:39:56.176 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:39:56.177 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:39:56.178 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20955a31]
2019-02-03 14:39:56.178 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20955a31]
2019-02-03 14:39:56.179 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20955a31]
2019-02-03 14:39:56.179 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20955a31]
2019-02-03 14:39:56.181 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:39:56.181 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd885c1]
2019-02-03 14:39:56.182 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@249205388 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:39:56.183 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:39:56.183 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:39:56.184 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:39:56.185 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd885c1]
2019-02-03 14:39:56.185 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd885c1]
2019-02-03 14:39:56.185 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd885c1]
2019-02-03 14:39:56.186 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd885c1]
2019-02-03 14:39:56.187 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:39:56.188 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697bc556]
2019-02-03 14:39:56.188 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@710547033 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:39:56.189 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:39:56.189 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:39:56.190 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:39:56.191 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697bc556]
2019-02-03 14:39:56.191 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697bc556]
2019-02-03 14:39:56.192 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697bc556]
2019-02-03 14:39:56.192 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697bc556]
2019-02-03 14:40:12.623 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:40:18.496 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:40:18.497 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:40:18.497 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.498 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.499 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:40:18.498 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:40:18.499 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:40:18.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:40:18.500 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.501 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:40:18.955 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:40:18.955 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:40:18.956 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.956 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.957 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:40:18.957 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:40:18.957 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.958 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:40:18.958 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:40:18.958 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:18.959 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:40:19.581 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:40:19.582 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:19.582 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:19.583 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:40:19.583 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:40:19.585 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:19.585 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:40:19.585 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:40:19.586 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:19.586 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:40:19.586 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:19.587 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6227cdb7]
2019-02-03 14:40:19.587 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2013949906 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:19.588 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:40:19.588 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:40:19.590 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:40:19.590 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6227cdb7]
2019-02-03 14:40:19.591 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6227cdb7]
2019-02-03 14:40:19.591 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6227cdb7]
2019-02-03 14:40:19.592 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6227cdb7]
2019-02-03 14:40:19.593 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:19.593 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ffe4a95]
2019-02-03 14:40:19.594 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1629936275 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:19.594 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:40:19.595 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:40:19.596 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:40:19.596 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ffe4a95]
2019-02-03 14:40:19.596 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ffe4a95]
2019-02-03 14:40:19.596 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ffe4a95]
2019-02-03 14:40:19.597 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ffe4a95]
2019-02-03 14:40:19.597 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:19.598 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e912b51]
2019-02-03 14:40:19.598 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2130008072 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:19.598 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:40:19.599 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:40:19.600 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:40:19.601 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e912b51]
2019-02-03 14:40:19.602 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e912b51]
2019-02-03 14:40:19.602 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e912b51]
2019-02-03 14:40:19.602 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e912b51]
2019-02-03 14:40:19.603 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:19.603 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e9f866]
2019-02-03 14:40:19.604 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1515013243 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:19.604 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:40:19.604 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:40:19.606 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:40:19.606 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e9f866]
2019-02-03 14:40:19.606 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e9f866]
2019-02-03 14:40:19.606 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e9f866]
2019-02-03 14:40:19.606 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e9f866]
2019-02-03 14:40:19.607 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:19.607 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7949b18f]
2019-02-03 14:40:19.607 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@563602816 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:19.608 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:40:19.608 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:40:19.609 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:40:19.609 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7949b18f]
2019-02-03 14:40:19.610 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7949b18f]
2019-02-03 14:40:19.610 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7949b18f]
2019-02-03 14:40:19.611 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7949b18f]
2019-02-03 14:40:42.624 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:40:53.949 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:40:53.950 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:40:53.950 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:53.951 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:53.951 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:40:53.951 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:40:53.952 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:53.953 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:40:53.953 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:40:53.953 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:53.953 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:40:54.114 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:40:54.114 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:40:54.114 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.115 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.115 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:40:54.115 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:40:54.116 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.116 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:40:54.117 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:40:54.118 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.118 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:40:54.752 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:40:54.752 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.753 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.753 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:40:54.753 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:40:54.754 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.754 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:40:54.754 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:40:54.754 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:40:54.755 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:40:54.756 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:54.756 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334aef53]
2019-02-03 14:40:54.757 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@302834105 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:54.757 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:40:54.758 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:40:54.759 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:40:54.760 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334aef53]
2019-02-03 14:40:54.760 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334aef53]
2019-02-03 14:40:54.761 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334aef53]
2019-02-03 14:40:54.761 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334aef53]
2019-02-03 14:40:54.763 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:54.764 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bdc733b]
2019-02-03 14:40:54.764 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@59788444 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:54.765 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:40:54.766 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:40:54.767 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:40:54.768 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bdc733b]
2019-02-03 14:40:54.768 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bdc733b]
2019-02-03 14:40:54.768 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bdc733b]
2019-02-03 14:40:54.769 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bdc733b]
2019-02-03 14:40:54.770 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:54.770 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8a028b]
2019-02-03 14:40:54.771 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2132865764 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:54.771 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:40:54.772 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:40:54.773 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:40:54.774 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8a028b]
2019-02-03 14:40:54.774 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8a028b]
2019-02-03 14:40:54.774 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8a028b]
2019-02-03 14:40:54.775 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8a028b]
2019-02-03 14:40:54.776 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:54.777 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eaaf8c]
2019-02-03 14:40:54.778 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@519356106 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:54.779 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:40:54.779 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:40:54.782 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:40:54.782 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eaaf8c]
2019-02-03 14:40:54.783 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eaaf8c]
2019-02-03 14:40:54.783 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eaaf8c]
2019-02-03 14:40:54.783 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eaaf8c]
2019-02-03 14:40:54.785 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:40:54.785 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045e198]
2019-02-03 14:40:54.786 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@931701676 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:40:54.786 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:40:54.787 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:40:54.788 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:40:54.788 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045e198]
2019-02-03 14:40:54.789 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045e198]
2019-02-03 14:40:54.789 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045e198]
2019-02-03 14:40:54.790 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045e198]
2019-02-03 14:41:12.626 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:41:42.627 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:41:44.364 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:41:44.365 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:41:44.365 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.365 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.366 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:41:44.366 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:41:44.369 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.369 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:41:44.369 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:41:44.370 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.371 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:41:44.502 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:41:44.502 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:41:44.503 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.504 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.505 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:41:44.505 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:41:44.505 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.506 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:41:44.507 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:41:44.507 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.507 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:41:44.507 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:41:44.507 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:41:44.508 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.509 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.510 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:41:44.509 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:41:44.512 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.512 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:41:44.512 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:41:44.513 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:44.513 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:41:45.215 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:41:45.216 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:45.217 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:45.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:41:45.217 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:41:45.219 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:45.219 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:41:45.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:41:45.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:45.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:41:45.221 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:41:45.222 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cda4156]
2019-02-03 14:41:45.223 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@459747245 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:41:45.223 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:41:45.224 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:41:45.226 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:41:45.226 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cda4156]
2019-02-03 14:41:45.227 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cda4156]
2019-02-03 14:41:45.227 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cda4156]
2019-02-03 14:41:45.228 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cda4156]
2019-02-03 14:41:45.229 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:41:45.230 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6495a529]
2019-02-03 14:41:45.231 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1950629233 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:41:45.231 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:41:45.233 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:41:45.234 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:41:45.235 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6495a529]
2019-02-03 14:41:45.235 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6495a529]
2019-02-03 14:41:45.235 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6495a529]
2019-02-03 14:41:45.236 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6495a529]
2019-02-03 14:41:45.238 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:41:45.238 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@903c01e]
2019-02-03 14:41:45.239 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@916319503 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:41:45.240 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:41:45.240 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:41:45.241 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:41:45.242 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@903c01e]
2019-02-03 14:41:45.243 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@903c01e]
2019-02-03 14:41:45.244 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@903c01e]
2019-02-03 14:41:45.244 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@903c01e]
2019-02-03 14:41:45.246 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:41:45.246 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa86449]
2019-02-03 14:41:45.247 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@531831882 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:41:45.248 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:41:45.249 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:41:45.250 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:41:45.251 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa86449]
2019-02-03 14:41:45.251 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa86449]
2019-02-03 14:41:45.252 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa86449]
2019-02-03 14:41:45.253 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa86449]
2019-02-03 14:41:45.254 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:41:45.255 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f28e07d]
2019-02-03 14:41:45.255 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@976786296 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:41:45.256 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:41:45.257 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:41:45.258 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:41:45.259 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f28e07d]
2019-02-03 14:41:45.259 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f28e07d]
2019-02-03 14:41:45.260 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f28e07d]
2019-02-03 14:41:45.260 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f28e07d]
2019-02-03 14:41:50.378 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:41:50.378 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:41:50.379 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.379 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:41:50.379 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:41:50.381 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:41:50.382 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:41:50.382 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.382 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.383 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:41:50.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.384 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:41:50.385 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.385 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 10 bytes, 2 commands in the stack
2019-02-03 14:41:50.386 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 2 commands
2019-02-03 14:41:50.386 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.386 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:41:50.386 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:41:50.387 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:41:50.387 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:12.628 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:42:15.532 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:15.533 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:42:15.533 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.534 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.534 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:15.534 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:15.538 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.539 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:15.539 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:15.539 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.540 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:15.702 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:15.703 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:42:15.704 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.704 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.705 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:15.705 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:15.705 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.707 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:15.707 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:15.707 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.707 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:15.708 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:15.708 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:42:15.709 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.709 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.710 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:15.710 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:15.711 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.711 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:15.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:15.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:15.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:16.458 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:16.459 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:16.460 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:16.461 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:16.461 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:16.462 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:16.466 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:16.466 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:16.467 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:16.467 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:16.468 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:16.469 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef6b53c]
2019-02-03 14:42:16.469 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2066227392 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:16.470 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:42:16.471 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:42:16.472 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:42:16.473 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef6b53c]
2019-02-03 14:42:16.474 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef6b53c]
2019-02-03 14:42:16.474 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef6b53c]
2019-02-03 14:42:16.475 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef6b53c]
2019-02-03 14:42:16.477 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:16.477 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@120e0ad6]
2019-02-03 14:42:16.478 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2100473930 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:16.478 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:42:16.479 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:42:16.481 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:42:16.482 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@120e0ad6]
2019-02-03 14:42:16.483 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@120e0ad6]
2019-02-03 14:42:16.484 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@120e0ad6]
2019-02-03 14:42:16.484 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@120e0ad6]
2019-02-03 14:42:16.485 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:16.486 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697e6f66]
2019-02-03 14:42:16.486 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1582867941 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:16.487 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:42:16.487 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:42:16.489 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:42:16.490 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697e6f66]
2019-02-03 14:42:16.490 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697e6f66]
2019-02-03 14:42:16.491 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697e6f66]
2019-02-03 14:42:16.491 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@697e6f66]
2019-02-03 14:42:16.493 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:16.494 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed73dbd]
2019-02-03 14:42:16.495 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2054515257 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:16.496 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:42:16.497 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:42:16.498 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:42:16.499 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed73dbd]
2019-02-03 14:42:16.499 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed73dbd]
2019-02-03 14:42:16.499 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed73dbd]
2019-02-03 14:42:16.500 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed73dbd]
2019-02-03 14:42:16.502 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:16.502 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fc31a2]
2019-02-03 14:42:16.502 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@581848352 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:16.503 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:42:16.504 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:42:16.505 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:42:16.506 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fc31a2]
2019-02-03 14:42:16.506 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fc31a2]
2019-02-03 14:42:16.507 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fc31a2]
2019-02-03 14:42:16.507 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fc31a2]
2019-02-03 14:42:35.939 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:35.940 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:42:35.940 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.941 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.943 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:35.943 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:35.943 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:35.945 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:35.946 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.946 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:35.948 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:35.948 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:42:35.949 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.949 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.950 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:35.950 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:35.951 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.952 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:35.952 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:35.952 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:35.953 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:36.634 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:42:36.635 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:36.635 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:36.636 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:42:36.636 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:42:36.636 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:36.637 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:42:36.637 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:42:36.637 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:42:36.637 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:42:36.638 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:36.639 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599d356a]
2019-02-03 14:42:36.639 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@156772795 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:36.640 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:42:36.641 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:42:36.642 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:42:36.643 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599d356a]
2019-02-03 14:42:36.643 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599d356a]
2019-02-03 14:42:36.644 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599d356a]
2019-02-03 14:42:36.644 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599d356a]
2019-02-03 14:42:36.645 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:36.646 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2dd10b]
2019-02-03 14:42:36.647 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1128483863 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:36.647 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:42:36.648 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:42:36.649 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:42:36.649 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2dd10b]
2019-02-03 14:42:36.650 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2dd10b]
2019-02-03 14:42:36.650 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2dd10b]
2019-02-03 14:42:36.650 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2dd10b]
2019-02-03 14:42:36.652 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:36.652 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27cdb9d]
2019-02-03 14:42:36.653 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@551746212 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:36.654 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:42:36.654 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:42:36.655 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:42:36.656 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27cdb9d]
2019-02-03 14:42:36.656 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27cdb9d]
2019-02-03 14:42:36.656 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27cdb9d]
2019-02-03 14:42:36.657 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27cdb9d]
2019-02-03 14:42:36.659 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:36.659 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740bea85]
2019-02-03 14:42:36.660 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@538662059 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:36.660 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:42:36.661 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:42:36.662 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:42:36.663 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740bea85]
2019-02-03 14:42:36.663 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740bea85]
2019-02-03 14:42:36.663 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740bea85]
2019-02-03 14:42:36.664 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740bea85]
2019-02-03 14:42:36.665 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:42:36.666 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461a78]
2019-02-03 14:42:36.666 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@41880302 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:42:36.666 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:42:36.667 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:42:36.668 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:42:36.669 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461a78]
2019-02-03 14:42:36.669 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461a78]
2019-02-03 14:42:36.669 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461a78]
2019-02-03 14:42:36.670 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461a78]
2019-02-03 14:42:42.629 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:43:04.018 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:04.019 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:43:04.019 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.019 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.020 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:04.020 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:04.021 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.021 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:04.022 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:04.022 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.022 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:04.035 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:04.036 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:43:04.037 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.037 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:04.038 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:04.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.040 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:04.040 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:04.040 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:04.040 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:05.043 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:05.044 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:05.045 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:05.045 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:05.045 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:05.046 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:05.047 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:05.047 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:05.048 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:05.048 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:05.049 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:05.050 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b69b77c]
2019-02-03 14:43:05.050 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@839964888 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:05.051 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:43:05.052 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:43:05.054 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:43:05.055 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b69b77c]
2019-02-03 14:43:05.056 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b69b77c]
2019-02-03 14:43:05.056 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b69b77c]
2019-02-03 14:43:05.057 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b69b77c]
2019-02-03 14:43:05.058 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:05.059 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@656766fd]
2019-02-03 14:43:05.059 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@732652177 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:05.061 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:43:05.061 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:43:05.062 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:43:05.063 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@656766fd]
2019-02-03 14:43:05.063 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@656766fd]
2019-02-03 14:43:05.064 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@656766fd]
2019-02-03 14:43:05.064 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@656766fd]
2019-02-03 14:43:05.065 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:05.066 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217dd9a1]
2019-02-03 14:43:05.066 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@576868380 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:05.068 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:43:05.068 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:43:05.069 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:43:05.070 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217dd9a1]
2019-02-03 14:43:05.070 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217dd9a1]
2019-02-03 14:43:05.070 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217dd9a1]
2019-02-03 14:43:05.070 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217dd9a1]
2019-02-03 14:43:05.071 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:05.072 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73abab2d]
2019-02-03 14:43:05.072 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@510854738 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:05.072 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:43:05.073 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:43:05.074 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:43:05.074 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73abab2d]
2019-02-03 14:43:05.074 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73abab2d]
2019-02-03 14:43:05.075 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73abab2d]
2019-02-03 14:43:05.075 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73abab2d]
2019-02-03 14:43:05.076 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:05.076 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5556ca11]
2019-02-03 14:43:05.077 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@668563149 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:05.077 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:43:05.077 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:43:05.078 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:43:05.079 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5556ca11]
2019-02-03 14:43:05.080 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5556ca11]
2019-02-03 14:43:05.080 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5556ca11]
2019-02-03 14:43:05.080 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5556ca11]
2019-02-03 14:43:12.630 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:43:23.958 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:23.959 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:43:23.959 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:23.959 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:23.960 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:23.960 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:23.962 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:23.962 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:23.962 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:23.963 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:23.963 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:24.086 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:24.087 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:43:24.088 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.088 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.089 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:24.088 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:24.091 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:24.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:24.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:24.716 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:24.718 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.719 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.719 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:24.719 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:24.720 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.720 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:24.721 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:24.721 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:24.721 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:24.722 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:24.722 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afb8ab]
2019-02-03 14:43:24.723 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1290585910 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:24.723 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:43:24.724 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:43:24.726 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:43:24.727 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afb8ab]
2019-02-03 14:43:24.728 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afb8ab]
2019-02-03 14:43:24.728 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afb8ab]
2019-02-03 14:43:24.729 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afb8ab]
2019-02-03 14:43:24.730 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:24.731 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e6dfa8]
2019-02-03 14:43:24.732 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@233384271 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:24.732 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:43:24.733 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:43:24.734 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:43:24.734 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e6dfa8]
2019-02-03 14:43:24.735 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e6dfa8]
2019-02-03 14:43:24.735 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e6dfa8]
2019-02-03 14:43:24.736 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e6dfa8]
2019-02-03 14:43:24.737 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:24.737 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27936331]
2019-02-03 14:43:24.738 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1824771516 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:24.738 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:43:24.739 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:43:24.740 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:43:24.741 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27936331]
2019-02-03 14:43:24.741 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27936331]
2019-02-03 14:43:24.742 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27936331]
2019-02-03 14:43:24.742 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27936331]
2019-02-03 14:43:24.743 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:24.744 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c9a5d9]
2019-02-03 14:43:24.744 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@519972858 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:24.745 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:43:24.746 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:43:24.747 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:43:24.747 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c9a5d9]
2019-02-03 14:43:24.747 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c9a5d9]
2019-02-03 14:43:24.748 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c9a5d9]
2019-02-03 14:43:24.748 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c9a5d9]
2019-02-03 14:43:24.749 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:43:24.749 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8fa4d2]
2019-02-03 14:43:24.751 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@372988300 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:43:24.751 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:43:24.752 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:43:24.753 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:43:24.753 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8fa4d2]
2019-02-03 14:43:24.754 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8fa4d2]
2019-02-03 14:43:24.755 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8fa4d2]
2019-02-03 14:43:24.755 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8fa4d2]
2019-02-03 14:43:28.318 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:43:28.319 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:43:28.319 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:28.319 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:28.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:43:28.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:28.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:43:28.324 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:43:28.324 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:43:28.324 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:43:28.329 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:43:42.631 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:44:12.631 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:44:42.632 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:45:04.254 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:45:04.255 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:45:04.258 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:04.259 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:04.259 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:45:04.259 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:45:04.260 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:04.260 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:45:04.260 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:45:04.260 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:04.261 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:45:11.804 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:45:11.804 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:45:11.805 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:11.805 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:11.805 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:45:11.806 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:45:11.806 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:11.807 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:45:11.807 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:45:11.808 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:45:11.808 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:45:12.633 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:45:42.635 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:46:12.636 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:46:21.767 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:46:21.768 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:46:21.768 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.769 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.769 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:46:21.769 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:46:21.770 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.770 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:46:21.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:46:21.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:46:21.930 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:46:21.931 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:46:21.932 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.933 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.933 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:46:21.933 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:46:21.934 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.935 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:46:21.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:46:21.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:21.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:46:22.594 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:46:22.595 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:22.595 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:22.596 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:46:22.596 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:46:22.597 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:22.597 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:46:22.598 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:46:22.598 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:22.598 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:46:22.599 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:46:22.600 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a742441]
2019-02-03 14:46:22.600 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1162869011 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:46:22.601 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:46:22.601 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:46:22.603 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:46:22.604 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a742441]
2019-02-03 14:46:22.604 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a742441]
2019-02-03 14:46:22.605 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a742441]
2019-02-03 14:46:22.605 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a742441]
2019-02-03 14:46:22.606 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:46:22.607 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdbd2df]
2019-02-03 14:46:22.607 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@319035578 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:46:22.608 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:46:22.608 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:46:22.610 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:46:22.610 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdbd2df]
2019-02-03 14:46:22.611 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdbd2df]
2019-02-03 14:46:22.611 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdbd2df]
2019-02-03 14:46:22.611 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdbd2df]
2019-02-03 14:46:22.612 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:46:22.613 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e7a173]
2019-02-03 14:46:22.614 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1733364511 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:46:22.614 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:46:22.614 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:46:22.616 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:46:22.616 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e7a173]
2019-02-03 14:46:22.617 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e7a173]
2019-02-03 14:46:22.617 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e7a173]
2019-02-03 14:46:22.617 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e7a173]
2019-02-03 14:46:22.618 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:46:22.619 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a5363dc]
2019-02-03 14:46:22.619 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@472734242 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:46:22.620 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:46:22.620 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:46:22.621 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:46:22.622 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a5363dc]
2019-02-03 14:46:22.622 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a5363dc]
2019-02-03 14:46:22.622 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a5363dc]
2019-02-03 14:46:22.623 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a5363dc]
2019-02-03 14:46:22.624 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:46:22.624 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af6816]
2019-02-03 14:46:22.625 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1336366293 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:46:22.625 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:46:22.626 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:46:22.627 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:46:22.627 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af6816]
2019-02-03 14:46:22.628 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af6816]
2019-02-03 14:46:22.629 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af6816]
2019-02-03 14:46:22.629 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af6816]
2019-02-03 14:46:24.252 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:46:24.253 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:46:24.253 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:24.254 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:24.254 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:46:24.254 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:46:24.255 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:24.255 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:46:24.255 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:46:24.256 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:24.256 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:46:37.933 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:46:37.934 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:46:37.934 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:37.934 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:37.935 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:46:37.935 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:46:37.935 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:37.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:46:37.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:46:37.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:46:37.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:46:42.637 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:47:02.522 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:02.523 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:02.523 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:02.524 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:02.525 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:02.524 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:02.525 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:02.526 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:02.526 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:02.526 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:02.526 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:08.081 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:08.081 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:08.082 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:08.082 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:08.082 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:08.082 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:08.083 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:08.083 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:08.083 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:08.083 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:08.083 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:12.273 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:12.273 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:12.273 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:12.274 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:12.274 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:12.274 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:12.278 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:12.278 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:12.279 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:12.279 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:12.279 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:12.639 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:47:18.437 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:18.438 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:18.438 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:18.439 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:18.439 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:18.439 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:18.439 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:18.440 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:18.440 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:18.440 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:18.440 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:33.810 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:33.811 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:33.811 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:33.812 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:33.813 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:33.813 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:33.813 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:33.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:33.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:33.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:33.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:39.938 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:39.938 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:39.938 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:39.942 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:39.943 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:39.943 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:39.943 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:39.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:39.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:39.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:39.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:41.764 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:47:41.765 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:47:41.766 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:41.766 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:41.770 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:47:41.770 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:47:41.770 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:41.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:47:41.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:47:41.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:47:41.772 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:47:42.640 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:48:12.641 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:48:13.126 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:13.127 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:48:13.127 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.128 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.130 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:13.130 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:13.131 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.132 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:13.132 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:13.132 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.132 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:13.237 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:13.238 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:48:13.239 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.239 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.240 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:13.240 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:13.241 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.242 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:13.242 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:13.242 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.243 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:13.865 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:13.866 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.866 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.870 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:13.870 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:13.871 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.871 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:13.872 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:13.872 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:13.872 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:13.873 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:13.874 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73408f3]
2019-02-03 14:48:13.875 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@678248144 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:13.875 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:48:13.876 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:48:13.878 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:48:13.879 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73408f3]
2019-02-03 14:48:13.879 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73408f3]
2019-02-03 14:48:13.879 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73408f3]
2019-02-03 14:48:13.880 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73408f3]
2019-02-03 14:48:13.881 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:13.881 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1055e3d4]
2019-02-03 14:48:13.882 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1431822976 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:13.882 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:48:13.882 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:48:13.883 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:48:13.884 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1055e3d4]
2019-02-03 14:48:13.884 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1055e3d4]
2019-02-03 14:48:13.884 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1055e3d4]
2019-02-03 14:48:13.885 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1055e3d4]
2019-02-03 14:48:13.886 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:13.886 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ca6d5a]
2019-02-03 14:48:13.887 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@649308174 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:13.887 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:48:13.888 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:48:13.890 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:48:13.890 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ca6d5a]
2019-02-03 14:48:13.891 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ca6d5a]
2019-02-03 14:48:13.891 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ca6d5a]
2019-02-03 14:48:13.891 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ca6d5a]
2019-02-03 14:48:13.893 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:13.894 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13d9b6e5]
2019-02-03 14:48:13.895 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1910623661 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:13.896 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:48:13.898 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:48:13.899 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:48:13.900 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13d9b6e5]
2019-02-03 14:48:13.900 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13d9b6e5]
2019-02-03 14:48:13.901 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13d9b6e5]
2019-02-03 14:48:13.901 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13d9b6e5]
2019-02-03 14:48:13.902 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:13.903 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50058913]
2019-02-03 14:48:13.904 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1396795970 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:13.904 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:48:13.905 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:48:13.906 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:48:13.907 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50058913]
2019-02-03 14:48:13.907 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50058913]
2019-02-03 14:48:13.907 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50058913]
2019-02-03 14:48:13.908 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50058913]
2019-02-03 14:48:15.909 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:15.910 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:48:15.911 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:15.912 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:15.912 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:15.912 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:15.913 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:15.914 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:15.914 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:15.914 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:15.914 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:42.643 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:48:58.179 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:58.180 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:48:58.181 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.181 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.182 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:58.182 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:58.183 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.183 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:58.183 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:58.183 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.184 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:58.331 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:58.332 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:48:58.332 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.332 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.333 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:58.333 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:58.334 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.334 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:58.336 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:58.336 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.336 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:58.863 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:48:58.864 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.865 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.865 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:48:58.865 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:48:58.869 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.870 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:48:58.870 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:48:58.870 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:48:58.871 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:48:58.871 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:58.872 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f1422f]
2019-02-03 14:48:58.873 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@596269952 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:58.873 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:48:58.874 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:48:58.875 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:48:58.875 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f1422f]
2019-02-03 14:48:58.876 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f1422f]
2019-02-03 14:48:58.876 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f1422f]
2019-02-03 14:48:58.876 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f1422f]
2019-02-03 14:48:58.877 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:58.878 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7392a0b3]
2019-02-03 14:48:58.878 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@226613837 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:58.879 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:48:58.880 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:48:58.880 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:48:58.881 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7392a0b3]
2019-02-03 14:48:58.881 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7392a0b3]
2019-02-03 14:48:58.881 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7392a0b3]
2019-02-03 14:48:58.882 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7392a0b3]
2019-02-03 14:48:58.883 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:58.883 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd9b17e]
2019-02-03 14:48:58.884 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@485676277 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:58.884 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:48:58.885 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:48:58.886 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:48:58.887 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd9b17e]
2019-02-03 14:48:58.887 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd9b17e]
2019-02-03 14:48:58.887 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd9b17e]
2019-02-03 14:48:58.888 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd9b17e]
2019-02-03 14:48:58.889 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:58.889 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fd430e]
2019-02-03 14:48:58.890 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1501498748 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:58.890 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:48:58.891 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:48:58.892 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:48:58.893 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fd430e]
2019-02-03 14:48:58.893 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fd430e]
2019-02-03 14:48:58.894 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fd430e]
2019-02-03 14:48:58.894 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fd430e]
2019-02-03 14:48:58.895 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:48:58.896 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4095b2e8]
2019-02-03 14:48:58.897 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2032140972 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:48:58.897 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:48:58.897 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:48:58.898 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:48:58.899 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4095b2e8]
2019-02-03 14:48:58.899 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4095b2e8]
2019-02-03 14:48:58.900 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4095b2e8]
2019-02-03 14:48:58.900 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4095b2e8]
2019-02-03 14:49:01.636 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:49:01.636 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:49:01.637 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:01.637 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:01.638 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:49:01.638 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:49:01.638 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:01.639 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:49:01.639 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:49:01.639 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:01.643 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:49:12.644 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:49:42.646 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:49:47.705 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:49:47.706 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:49:47.706 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.707 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.711 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:49:47.711 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:49:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:49:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:49:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.713 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:49:47.860 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:49:47.860 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:49:47.861 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.861 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.862 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:49:47.862 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:49:47.863 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.863 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:49:47.906 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:49:47.906 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:47.906 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:49:48.820 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:49:48.822 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:48.822 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:48.823 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:49:48.823 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:49:48.865 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:48.866 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:49:48.866 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:49:48.866 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:48.867 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:49:48.868 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:49:48.868 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10bbfe91]
2019-02-03 14:49:48.869 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@156035285 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:49:48.968 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:49:48.969 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:49:49.063 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:49:49.063 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10bbfe91]
2019-02-03 14:49:49.064 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10bbfe91]
2019-02-03 14:49:49.065 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10bbfe91]
2019-02-03 14:49:49.065 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10bbfe91]
2019-02-03 14:49:49.067 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:49:49.067 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d305063]
2019-02-03 14:49:49.068 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1728365477 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:49:49.069 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:49:49.070 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:49:49.155 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:49:49.155 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d305063]
2019-02-03 14:49:49.156 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d305063]
2019-02-03 14:49:49.156 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d305063]
2019-02-03 14:49:49.156 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d305063]
2019-02-03 14:49:49.157 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:49:49.157 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512a0358]
2019-02-03 14:49:49.158 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1404621894 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:49:49.158 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:49:49.159 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:49:49.160 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:49:49.160 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512a0358]
2019-02-03 14:49:49.339 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512a0358]
2019-02-03 14:49:49.340 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512a0358]
2019-02-03 14:49:49.340 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512a0358]
2019-02-03 14:49:49.341 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:49:49.342 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eff48f9]
2019-02-03 14:49:49.342 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@81108413 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:49:49.343 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:49:49.343 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:49:49.557 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:49:49.558 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eff48f9]
2019-02-03 14:49:49.558 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eff48f9]
2019-02-03 14:49:49.559 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eff48f9]
2019-02-03 14:49:49.559 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eff48f9]
2019-02-03 14:49:49.560 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:49:49.561 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f452ec6]
2019-02-03 14:49:49.561 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@517918594 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:49:49.807 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:49:49.808 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:49:49.809 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:49:49.810 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f452ec6]
2019-02-03 14:49:49.811 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f452ec6]
2019-02-03 14:49:49.811 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f452ec6]
2019-02-03 14:49:49.812 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f452ec6]
2019-02-03 14:49:52.208 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:49:52.209 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:49:52.209 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:52.210 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:52.211 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:49:52.211 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:49:52.211 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:52.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:49:52.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:49:52.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:49:52.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:50:12.647 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:50:22.688 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:50:22.689 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:50:22.689 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.689 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.690 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:50:22.691 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.690 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:50:22.691 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:50:22.692 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:50:22.692 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.692 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:50:22.935 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:50:22.935 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:50:22.935 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.936 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:50:22.940 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.936 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:50:22.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:50:22.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:50:22.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:22.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:50:23.607 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:50:23.608 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:23.609 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:23.609 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:50:23.609 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:50:23.610 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:23.610 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:50:23.611 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:50:23.611 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:23.611 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:50:23.613 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:23.613 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0e48ff]
2019-02-03 14:50:23.614 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@992691701 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:23.614 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:50:23.615 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:50:23.616 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:50:23.617 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0e48ff]
2019-02-03 14:50:23.618 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0e48ff]
2019-02-03 14:50:23.618 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0e48ff]
2019-02-03 14:50:23.618 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0e48ff]
2019-02-03 14:50:23.619 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:23.620 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd83be9]
2019-02-03 14:50:23.620 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@674229680 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:23.621 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:50:23.622 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:50:23.623 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:50:23.623 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd83be9]
2019-02-03 14:50:23.623 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd83be9]
2019-02-03 14:50:23.624 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd83be9]
2019-02-03 14:50:23.624 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd83be9]
2019-02-03 14:50:23.625 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:23.625 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a415d5f]
2019-02-03 14:50:23.626 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1393032975 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:23.627 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:50:23.627 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:50:23.628 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:50:23.629 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a415d5f]
2019-02-03 14:50:23.630 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a415d5f]
2019-02-03 14:50:23.630 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a415d5f]
2019-02-03 14:50:23.630 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a415d5f]
2019-02-03 14:50:23.631 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:23.632 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62473841]
2019-02-03 14:50:23.632 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1426950363 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:23.633 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:50:23.633 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:50:23.634 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:50:23.634 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62473841]
2019-02-03 14:50:23.635 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62473841]
2019-02-03 14:50:23.635 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62473841]
2019-02-03 14:50:23.635 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62473841]
2019-02-03 14:50:23.637 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:23.638 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10e4875]
2019-02-03 14:50:23.638 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@716660536 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:23.639 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:50:23.639 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:50:23.640 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:50:23.641 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10e4875]
2019-02-03 14:50:23.641 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10e4875]
2019-02-03 14:50:23.642 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10e4875]
2019-02-03 14:50:23.643 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10e4875]
2019-02-03 14:50:34.917 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:50:34.918 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:50:34.918 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:34.919 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:34.919 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:50:34.919 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:50:34.923 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:34.924 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:50:34.924 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:50:34.924 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:34.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:50:35.941 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:50:35.942 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:35.943 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:35.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:50:35.944 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:50:35.945 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:35.946 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:50:35.946 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:50:35.946 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:35.946 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:50:35.947 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:35.948 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8961c8]
2019-02-03 14:50:35.948 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1916004377 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:35.949 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:50:35.950 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:50:35.951 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:50:35.952 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8961c8]
2019-02-03 14:50:35.952 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8961c8]
2019-02-03 14:50:35.953 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8961c8]
2019-02-03 14:50:35.953 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8961c8]
2019-02-03 14:50:35.954 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:35.955 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@983d387]
2019-02-03 14:50:35.955 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1441548796 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:35.956 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:50:35.956 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:50:35.957 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:50:35.958 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@983d387]
2019-02-03 14:50:35.958 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@983d387]
2019-02-03 14:50:35.958 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@983d387]
2019-02-03 14:50:35.959 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@983d387]
2019-02-03 14:50:35.960 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:35.960 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360996f0]
2019-02-03 14:50:35.961 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1760330325 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:35.961 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:50:35.962 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:50:35.963 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:50:35.964 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360996f0]
2019-02-03 14:50:35.964 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360996f0]
2019-02-03 14:50:35.964 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360996f0]
2019-02-03 14:50:35.965 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360996f0]
2019-02-03 14:50:35.965 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:35.966 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4628cffc]
2019-02-03 14:50:35.966 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1734106605 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:35.967 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:50:35.967 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:50:35.968 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:50:35.968 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4628cffc]
2019-02-03 14:50:35.968 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4628cffc]
2019-02-03 14:50:35.968 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4628cffc]
2019-02-03 14:50:35.969 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4628cffc]
2019-02-03 14:50:35.969 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:50:35.970 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5a85df]
2019-02-03 14:50:35.970 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@660939220 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:50:35.971 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:50:35.971 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:50:35.972 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:50:35.973 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5a85df]
2019-02-03 14:50:35.973 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5a85df]
2019-02-03 14:50:35.974 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5a85df]
2019-02-03 14:50:35.974 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5a85df]
2019-02-03 14:50:42.652 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:50:45.034 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:50:45.034 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:50:45.035 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:45.036 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:45.036 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:50:45.036 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:50:45.037 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:45.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:50:45.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:50:45.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:50:45.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:03.213 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:03.214 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:51:03.214 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.215 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.215 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:03.215 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:03.216 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.216 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:03.216 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:03.217 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.217 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:03.458 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:03.459 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:51:03.463 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.463 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.464 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:03.464 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:03.465 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.465 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:03.465 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:03.466 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:03.466 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:04.277 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:04.278 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:04.279 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:04.280 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:04.280 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:04.280 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:04.281 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:04.281 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:04.281 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:04.282 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:04.282 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:04.283 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ba3e889]
2019-02-03 14:51:04.283 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@339817123 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:04.284 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:51:04.285 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:51:04.287 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:51:04.287 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ba3e889]
2019-02-03 14:51:04.288 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ba3e889]
2019-02-03 14:51:04.288 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ba3e889]
2019-02-03 14:51:04.289 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ba3e889]
2019-02-03 14:51:04.290 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:04.290 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17736b58]
2019-02-03 14:51:04.291 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@546837766 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:04.292 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:51:04.292 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:51:04.293 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:51:04.294 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17736b58]
2019-02-03 14:51:04.294 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17736b58]
2019-02-03 14:51:04.295 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17736b58]
2019-02-03 14:51:04.295 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17736b58]
2019-02-03 14:51:04.296 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:04.297 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5bd1e]
2019-02-03 14:51:04.298 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1491591684 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:04.298 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:51:04.299 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:51:04.300 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:51:04.301 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5bd1e]
2019-02-03 14:51:04.301 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5bd1e]
2019-02-03 14:51:04.302 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5bd1e]
2019-02-03 14:51:04.302 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5bd1e]
2019-02-03 14:51:04.303 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:04.304 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46bcca33]
2019-02-03 14:51:04.304 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@481987927 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:04.304 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:51:04.305 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:51:04.306 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:51:04.306 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46bcca33]
2019-02-03 14:51:04.307 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46bcca33]
2019-02-03 14:51:04.308 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46bcca33]
2019-02-03 14:51:04.308 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46bcca33]
2019-02-03 14:51:04.309 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:04.310 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfb47ea]
2019-02-03 14:51:04.310 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@101092074 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:04.311 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:51:04.312 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:51:04.313 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:51:04.314 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfb47ea]
2019-02-03 14:51:04.314 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfb47ea]
2019-02-03 14:51:04.314 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfb47ea]
2019-02-03 14:51:04.315 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfb47ea]
2019-02-03 14:51:09.169 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:09.169 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:51:09.172 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:09.172 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:09.172 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:09.172 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:09.173 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:09.173 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:09.173 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:09.174 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:09.174 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:12.654 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:51:16.011 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:16.011 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:51:16.012 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.012 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.013 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:16.013 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:16.013 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.014 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:16.017 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:16.018 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.018 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:16.227 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:16.227 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:51:16.227 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.228 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:16.229 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:16.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.230 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:16.230 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:16.230 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:16.230 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:17.082 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:17.083 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:17.084 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:17.088 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:17.088 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:17.088 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:17.089 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:17.089 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:17.089 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:17.090 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:17.090 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:17.091 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78738f]
2019-02-03 14:51:17.092 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1242194778 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:17.092 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:51:17.094 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:51:17.096 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:51:17.096 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78738f]
2019-02-03 14:51:17.097 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78738f]
2019-02-03 14:51:17.097 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78738f]
2019-02-03 14:51:17.098 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78738f]
2019-02-03 14:51:17.099 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:17.100 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234ddfdf]
2019-02-03 14:51:17.100 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1831468689 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:17.101 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:51:17.102 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:51:17.103 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:51:17.104 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234ddfdf]
2019-02-03 14:51:17.105 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234ddfdf]
2019-02-03 14:51:17.105 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234ddfdf]
2019-02-03 14:51:17.106 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234ddfdf]
2019-02-03 14:51:17.107 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:17.107 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126b3978]
2019-02-03 14:51:17.108 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@588921234 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:17.108 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:51:17.109 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:51:17.110 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:51:17.110 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126b3978]
2019-02-03 14:51:17.111 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126b3978]
2019-02-03 14:51:17.111 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126b3978]
2019-02-03 14:51:17.111 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126b3978]
2019-02-03 14:51:17.113 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:17.113 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56df1bf0]
2019-02-03 14:51:17.113 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@999833448 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:17.114 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:51:17.114 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:51:17.115 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:51:17.116 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56df1bf0]
2019-02-03 14:51:17.116 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56df1bf0]
2019-02-03 14:51:17.268 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56df1bf0]
2019-02-03 14:51:17.268 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56df1bf0]
2019-02-03 14:51:17.272 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:17.272 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641ed8fb]
2019-02-03 14:51:17.273 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@248412543 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:17.273 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:51:17.273 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:51:17.274 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:51:17.275 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641ed8fb]
2019-02-03 14:51:17.275 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641ed8fb]
2019-02-03 14:51:17.276 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641ed8fb]
2019-02-03 14:51:17.276 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641ed8fb]
2019-02-03 14:51:39.880 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:51:39.882 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:39.883 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:39.883 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:51:39.883 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:51:39.884 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:39.884 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:51:39.884 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:51:39.884 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:51:39.885 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:51:39.901 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:39.902 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246ebf40]
2019-02-03 14:51:39.902 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@97346598 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:39.903 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:51:39.903 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:51:39.929 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:51:39.930 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246ebf40]
2019-02-03 14:51:39.930 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246ebf40]
2019-02-03 14:51:39.930 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246ebf40]
2019-02-03 14:51:39.931 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246ebf40]
2019-02-03 14:51:39.932 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:51:39.932 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76219932]
2019-02-03 14:51:39.933 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1692310134 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:51:39.933 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:51:39.933 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:51:39.934 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:51:39.934 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76219932]
2019-02-03 14:51:39.935 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76219932]
2019-02-03 14:51:39.935 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76219932]
2019-02-03 14:51:39.935 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76219932]
2019-02-03 14:51:42.655 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:52:12.656 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:52:42.658 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:52:56.035 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:52:56.035 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.036 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.037 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:52:56.037 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:52:56.037 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:52:56.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:52:56.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.038 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:52:56.039 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:56.040 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be323d]
2019-02-03 14:52:56.041 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1488594025 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:56.042 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:52:56.043 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:52:56.044 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:52:56.044 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be323d]
2019-02-03 14:52:56.045 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be323d]
2019-02-03 14:52:56.045 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be323d]
2019-02-03 14:52:56.046 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be323d]
2019-02-03 14:52:56.047 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:56.048 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe3b1c]
2019-02-03 14:52:56.049 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1786575789 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:56.049 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:52:56.050 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:52:56.051 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:52:56.053 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe3b1c]
2019-02-03 14:52:56.053 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe3b1c]
2019-02-03 14:52:56.053 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe3b1c]
2019-02-03 14:52:56.054 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe3b1c]
2019-02-03 14:52:56.067 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:52:56.068 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:52:56.068 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.068 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.069 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:52:56.069 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:52:56.070 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.071 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:52:56.071 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:52:56.071 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.071 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:52:56.287 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:52:56.288 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:52:56.289 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.289 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.290 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:52:56.290 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:52:56.290 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.291 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:52:56.291 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:52:56.291 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:56.291 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:52:57.196 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:52:57.199 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:57.200 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:57.201 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:52:57.201 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:52:57.203 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:57.204 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:52:57.204 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:52:57.204 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:52:57.205 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:52:57.206 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:57.207 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed2a5f]
2019-02-03 14:52:57.207 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@587176769 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:57.208 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:52:57.208 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:52:57.210 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:52:57.211 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed2a5f]
2019-02-03 14:52:57.213 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed2a5f]
2019-02-03 14:52:57.214 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed2a5f]
2019-02-03 14:52:57.214 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed2a5f]
2019-02-03 14:52:57.216 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:57.217 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cee5916]
2019-02-03 14:52:57.218 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1036807164 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:57.219 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:52:57.221 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:52:57.223 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:52:57.224 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cee5916]
2019-02-03 14:52:57.224 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cee5916]
2019-02-03 14:52:57.224 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cee5916]
2019-02-03 14:52:57.225 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cee5916]
2019-02-03 14:52:57.226 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:57.227 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1a0d33]
2019-02-03 14:52:57.228 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@429975977 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:57.230 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:52:57.231 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:52:57.233 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:52:57.234 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1a0d33]
2019-02-03 14:52:57.235 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1a0d33]
2019-02-03 14:52:57.236 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1a0d33]
2019-02-03 14:52:57.236 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1a0d33]
2019-02-03 14:52:57.238 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:57.239 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bf37b7b]
2019-02-03 14:52:57.239 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@709547338 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:57.240 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:52:57.241 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:52:57.242 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:52:57.243 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bf37b7b]
2019-02-03 14:52:57.244 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bf37b7b]
2019-02-03 14:52:57.244 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bf37b7b]
2019-02-03 14:52:57.245 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bf37b7b]
2019-02-03 14:52:57.247 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:52:57.248 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d20edfd]
2019-02-03 14:52:57.249 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@448297602 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:52:57.249 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:52:57.250 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:52:57.252 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:52:57.253 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d20edfd]
2019-02-03 14:52:57.254 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d20edfd]
2019-02-03 14:52:57.256 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d20edfd]
2019-02-03 14:52:57.257 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d20edfd]
2019-02-03 14:53:04.375 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:04.376 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:53:04.376 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:04.376 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:04.377 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:04.377 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:04.377 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:04.378 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:04.378 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:04.378 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:04.378 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:12.660 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:53:32.996 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:32.996 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:53:32.997 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:32.997 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:32.998 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:32.998 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:32.999 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.000 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:33.001 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:33.001 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.001 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:33.040 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:33.041 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:53:33.041 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.042 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.042 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:33.042 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:33.043 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.044 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:33.044 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:33.044 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.044 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:33.141 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:33.143 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.143 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.144 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:33.144 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:33.144 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:33.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:33.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.146 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:33.147 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.147 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36420209]
2019-02-03 14:53:33.148 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@756277124 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.149 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:53:33.149 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:53:33.150 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:53:33.151 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36420209]
2019-02-03 14:53:33.151 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36420209]
2019-02-03 14:53:33.152 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36420209]
2019-02-03 14:53:33.152 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36420209]
2019-02-03 14:53:33.153 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.153 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a772715]
2019-02-03 14:53:33.154 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@842429945 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.154 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:53:33.155 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:53:33.155 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:53:33.156 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a772715]
2019-02-03 14:53:33.156 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a772715]
2019-02-03 14:53:33.157 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a772715]
2019-02-03 14:53:33.157 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a772715]
2019-02-03 14:53:33.857 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:33.858 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.859 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.863 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:33.863 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:33.864 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.866 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:33.867 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:33.867 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:33.867 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:33.869 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.869 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694518dd]
2019-02-03 14:53:33.870 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@627733906 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.871 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:53:33.872 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:53:33.874 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:53:33.875 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694518dd]
2019-02-03 14:53:33.876 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694518dd]
2019-02-03 14:53:33.876 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694518dd]
2019-02-03 14:53:33.877 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694518dd]
2019-02-03 14:53:33.878 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.878 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29798c80]
2019-02-03 14:53:33.879 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@280940119 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.879 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:53:33.880 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:53:33.881 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:53:33.881 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29798c80]
2019-02-03 14:53:33.882 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29798c80]
2019-02-03 14:53:33.882 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29798c80]
2019-02-03 14:53:33.882 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29798c80]
2019-02-03 14:53:33.883 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.884 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a700671]
2019-02-03 14:53:33.884 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1049540747 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.884 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:53:33.885 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:53:33.886 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:53:33.887 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a700671]
2019-02-03 14:53:33.887 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a700671]
2019-02-03 14:53:33.887 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a700671]
2019-02-03 14:53:33.887 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a700671]
2019-02-03 14:53:33.888 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.888 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e34796d]
2019-02-03 14:53:33.889 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1231811076 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.889 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:53:33.889 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:53:33.890 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:53:33.890 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e34796d]
2019-02-03 14:53:33.891 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e34796d]
2019-02-03 14:53:33.891 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e34796d]
2019-02-03 14:53:33.891 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e34796d]
2019-02-03 14:53:33.892 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:33.893 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37700062]
2019-02-03 14:53:33.893 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@212709 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:33.893 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:53:33.894 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:53:33.895 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:53:33.895 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37700062]
2019-02-03 14:53:33.895 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37700062]
2019-02-03 14:53:33.896 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37700062]
2019-02-03 14:53:33.896 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37700062]
2019-02-03 14:53:42.665 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:53:44.080 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:44.081 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:53:44.081 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.085 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.086 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:44.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:44.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.087 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:44.087 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:44.087 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.087 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:44.576 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:44.577 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.581 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.582 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:44.582 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:44.582 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.583 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:44.583 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:44.583 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.583 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:44.584 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:44.585 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2711b4]
2019-02-03 14:53:44.585 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2026097994 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:44.586 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:53:44.587 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:53:44.589 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:53:44.589 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2711b4]
2019-02-03 14:53:44.590 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2711b4]
2019-02-03 14:53:44.591 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2711b4]
2019-02-03 14:53:44.591 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2711b4]
2019-02-03 14:53:44.593 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:44.593 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62cc7376]
2019-02-03 14:53:44.593 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@988758860 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:44.594 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:53:44.596 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:53:44.597 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:53:44.598 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62cc7376]
2019-02-03 14:53:44.598 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62cc7376]
2019-02-03 14:53:44.599 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62cc7376]
2019-02-03 14:53:44.600 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62cc7376]
2019-02-03 14:53:44.661 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:44.661 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:53:44.662 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.662 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.663 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:44.663 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:44.664 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.665 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:44.665 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:44.665 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:44.665 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:45.339 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:53:45.339 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:45.340 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:45.340 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:53:45.340 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:53:45.341 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:45.345 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:53:45.345 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:53:45.346 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:53:45.346 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:53:45.347 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:45.348 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b2305d]
2019-02-03 14:53:45.349 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@654495923 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:45.349 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:53:45.350 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:53:45.352 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:53:45.353 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b2305d]
2019-02-03 14:53:45.353 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b2305d]
2019-02-03 14:53:45.354 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b2305d]
2019-02-03 14:53:45.355 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b2305d]
2019-02-03 14:53:45.356 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:45.356 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed6811d]
2019-02-03 14:53:45.357 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@992127107 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:45.357 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:53:45.358 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:53:45.359 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:53:45.360 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed6811d]
2019-02-03 14:53:45.360 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed6811d]
2019-02-03 14:53:45.361 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed6811d]
2019-02-03 14:53:45.361 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed6811d]
2019-02-03 14:53:45.362 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:45.363 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105cf5ea]
2019-02-03 14:53:45.364 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1292983258 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:45.365 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:53:45.366 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:53:45.367 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:53:45.367 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105cf5ea]
2019-02-03 14:53:45.368 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105cf5ea]
2019-02-03 14:53:45.368 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105cf5ea]
2019-02-03 14:53:45.369 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105cf5ea]
2019-02-03 14:53:45.370 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:45.371 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3942198a]
2019-02-03 14:53:45.372 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@815079094 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:45.372 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:53:45.373 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:53:45.374 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:53:45.375 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3942198a]
2019-02-03 14:53:45.376 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3942198a]
2019-02-03 14:53:45.376 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3942198a]
2019-02-03 14:53:45.377 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3942198a]
2019-02-03 14:53:45.378 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:53:45.379 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6e5ded]
2019-02-03 14:53:45.379 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1594286553 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:53:45.380 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:53:45.381 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:53:45.381 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:53:45.382 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6e5ded]
2019-02-03 14:53:45.382 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6e5ded]
2019-02-03 14:53:45.382 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6e5ded]
2019-02-03 14:53:45.383 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6e5ded]
2019-02-03 14:54:12.667 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:54:25.428 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:25.429 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:54:25.430 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:25.430 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:25.430 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:25.430 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:25.431 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:25.432 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:25.432 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:25.432 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:25.432 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:26.217 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:26.218 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:54:26.218 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.218 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.219 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:26.219 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:26.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:26.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:26.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:26.469 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:26.470 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.470 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.471 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:26.471 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:26.471 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:26.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:26.472 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:26.473 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:26.474 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:26.474 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb991b7]
2019-02-03 14:54:26.475 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@797346575 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:26.475 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:54:26.480 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:54:26.481 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:54:26.482 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb991b7]
2019-02-03 14:54:26.482 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb991b7]
2019-02-03 14:54:26.483 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb991b7]
2019-02-03 14:54:26.483 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb991b7]
2019-02-03 14:54:26.484 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:26.485 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a5b142]
2019-02-03 14:54:26.486 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1203142630 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:26.487 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:54:26.487 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:54:26.488 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:54:26.489 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a5b142]
2019-02-03 14:54:26.489 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a5b142]
2019-02-03 14:54:26.490 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a5b142]
2019-02-03 14:54:26.490 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a5b142]
2019-02-03 14:54:27.347 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:27.348 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:27.349 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:27.350 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:27.350 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:27.351 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:27.352 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:27.352 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:27.352 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:27.352 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:27.353 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:27.353 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641c6e6f]
2019-02-03 14:54:27.354 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1581244898 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:27.354 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:54:27.355 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:54:27.356 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:54:27.357 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641c6e6f]
2019-02-03 14:54:27.358 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641c6e6f]
2019-02-03 14:54:27.358 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641c6e6f]
2019-02-03 14:54:27.358 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641c6e6f]
2019-02-03 14:54:27.360 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:27.360 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc92019]
2019-02-03 14:54:27.360 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1562231634 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:27.361 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:54:27.362 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:54:27.362 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:54:27.363 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc92019]
2019-02-03 14:54:27.363 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc92019]
2019-02-03 14:54:27.363 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc92019]
2019-02-03 14:54:27.364 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc92019]
2019-02-03 14:54:27.365 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:27.365 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557f3671]
2019-02-03 14:54:27.365 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@697568436 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:27.366 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:27.366 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:27.367 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:27.367 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557f3671]
2019-02-03 14:54:27.367 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557f3671]
2019-02-03 14:54:27.367 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557f3671]
2019-02-03 14:54:27.368 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557f3671]
2019-02-03 14:54:27.369 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:27.369 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585e1765]
2019-02-03 14:54:27.369 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1878887310 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:27.370 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:27.370 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:27.370 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:27.371 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585e1765]
2019-02-03 14:54:27.371 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585e1765]
2019-02-03 14:54:27.371 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585e1765]
2019-02-03 14:54:27.372 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585e1765]
2019-02-03 14:54:27.373 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:27.373 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b5f18c]
2019-02-03 14:54:27.373 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2138713591 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:27.373 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:27.374 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:27.374 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:27.375 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b5f18c]
2019-02-03 14:54:27.375 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b5f18c]
2019-02-03 14:54:27.375 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b5f18c]
2019-02-03 14:54:27.376 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b5f18c]
2019-02-03 14:54:41.914 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:41.915 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:54:41.915 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:41.916 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:41.917 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:41.917 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:41.918 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:41.919 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:41.919 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:41.919 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:41.919 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:42.147 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:42.148 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:42.149 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:54:42.148 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.149 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.149 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.150 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.150 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:42.150 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:42.150 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:42.151 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.151 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:42.152 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.152 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 10 bytes, 2 commands in the stack
2019-02-03 14:54:42.152 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 2 commands
2019-02-03 14:54:42.153 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.153 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:42.153 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:42.153 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:42.154 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:42.153 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:42.154 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b6cd0d]
2019-02-03 14:54:42.155 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1333809283 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:42.156 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:54:42.156 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:54:42.158 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:54:42.158 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b6cd0d]
2019-02-03 14:54:42.159 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b6cd0d]
2019-02-03 14:54:42.159 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b6cd0d]
2019-02-03 14:54:42.160 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b6cd0d]
2019-02-03 14:54:42.162 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:42.162 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4232ec5b]
2019-02-03 14:54:42.163 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@974280299 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:42.164 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:54:42.165 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:54:42.166 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:54:42.167 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4232ec5b]
2019-02-03 14:54:42.167 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4232ec5b]
2019-02-03 14:54:42.168 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4232ec5b]
2019-02-03 14:54:42.168 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4232ec5b]
2019-02-03 14:54:42.669 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:54:43.021 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:43.022 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:43.022 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:43.022 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:43.022 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:43.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:43.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:43.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:43.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:43.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:43.024 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:43.024 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f4b4529]
2019-02-03 14:54:43.025 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@788085226 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:43.026 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:54:43.027 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:54:43.028 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:54:43.028 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f4b4529]
2019-02-03 14:54:43.029 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f4b4529]
2019-02-03 14:54:43.029 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f4b4529]
2019-02-03 14:54:43.030 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f4b4529]
2019-02-03 14:54:43.031 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:43.031 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3984e3]
2019-02-03 14:54:43.032 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@230188280 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:43.032 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:54:43.032 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:54:43.033 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:54:43.033 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3984e3]
2019-02-03 14:54:43.033 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3984e3]
2019-02-03 14:54:43.034 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3984e3]
2019-02-03 14:54:43.034 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3984e3]
2019-02-03 14:54:43.035 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:43.035 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b61513b]
2019-02-03 14:54:43.036 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1437872882 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:43.037 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:43.037 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:43.038 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:43.038 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b61513b]
2019-02-03 14:54:43.038 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b61513b]
2019-02-03 14:54:43.038 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b61513b]
2019-02-03 14:54:43.039 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b61513b]
2019-02-03 14:54:43.040 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:43.040 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d70bf8a]
2019-02-03 14:54:43.041 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@153699280 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:43.041 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:43.042 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:43.043 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:43.044 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d70bf8a]
2019-02-03 14:54:43.044 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d70bf8a]
2019-02-03 14:54:43.045 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d70bf8a]
2019-02-03 14:54:43.045 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d70bf8a]
2019-02-03 14:54:43.046 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:43.047 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdbf08b]
2019-02-03 14:54:43.047 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@278671018 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:43.047 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:43.048 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:43.049 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:43.050 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdbf08b]
2019-02-03 14:54:43.050 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdbf08b]
2019-02-03 14:54:43.050 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdbf08b]
2019-02-03 14:54:43.051 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdbf08b]
2019-02-03 14:54:53.540 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:53.544 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.544 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.545 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:53.545 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:53.545 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.546 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:53.546 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:53.546 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.546 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:53.547 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:53.547 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687114d1]
2019-02-03 14:54:53.548 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@316170271 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:53.548 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:54:53.549 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:54:53.550 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:54:53.551 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687114d1]
2019-02-03 14:54:53.552 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687114d1]
2019-02-03 14:54:53.552 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687114d1]
2019-02-03 14:54:53.552 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687114d1]
2019-02-03 14:54:53.553 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:53.554 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e2e15]
2019-02-03 14:54:53.554 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@113032905 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:53.555 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:54:53.555 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:54:53.556 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:54:53.556 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e2e15]
2019-02-03 14:54:53.557 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e2e15]
2019-02-03 14:54:53.557 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e2e15]
2019-02-03 14:54:53.557 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e2e15]
2019-02-03 14:54:53.606 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:53.607 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:54:53.607 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.607 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.608 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:53.608 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:53.608 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.609 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:53.609 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:53.609 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.610 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:53.666 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:53.667 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:54:53.667 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.667 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.668 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:53.668 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:53.668 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.669 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:53.673 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:53.673 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:53.673 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:54.488 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:54:54.489 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:54.490 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:54.490 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:54:54.490 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:54:54.491 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:54.491 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:54:54.492 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:54:54.492 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:54:54.492 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:54:54.493 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:54.493 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a70d]
2019-02-03 14:54:54.494 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1183300438 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:54.495 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:54:54.496 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:54:54.497 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:54:54.497 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a70d]
2019-02-03 14:54:54.498 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a70d]
2019-02-03 14:54:54.498 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a70d]
2019-02-03 14:54:54.499 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a70d]
2019-02-03 14:54:54.500 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:54.500 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68573ed4]
2019-02-03 14:54:54.501 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1989961264 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:54.501 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:54:54.502 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:54:54.503 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:54:54.503 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68573ed4]
2019-02-03 14:54:54.503 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68573ed4]
2019-02-03 14:54:54.504 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68573ed4]
2019-02-03 14:54:54.504 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68573ed4]
2019-02-03 14:54:54.505 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:54.505 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f17b387]
2019-02-03 14:54:54.505 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1306142261 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:54.506 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:54.506 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:54.507 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:54.508 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f17b387]
2019-02-03 14:54:54.508 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f17b387]
2019-02-03 14:54:54.509 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f17b387]
2019-02-03 14:54:54.509 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f17b387]
2019-02-03 14:54:54.510 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:54.511 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0deb9b]
2019-02-03 14:54:54.511 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1374269682 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:54.511 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:54.512 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:54.513 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:54.513 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0deb9b]
2019-02-03 14:54:54.514 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0deb9b]
2019-02-03 14:54:54.514 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0deb9b]
2019-02-03 14:54:54.514 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0deb9b]
2019-02-03 14:54:54.515 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:54:54.516 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c934448]
2019-02-03 14:54:54.516 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@597429423 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:54:54.516 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:54:54.516 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:54:54.517 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:54:54.517 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c934448]
2019-02-03 14:54:54.518 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c934448]
2019-02-03 14:54:54.518 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c934448]
2019-02-03 14:54:54.518 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c934448]
2019-02-03 14:55:04.583 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:04.584 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:55:04.584 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.584 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.585 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:04.585 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:04.586 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.586 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:04.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:04.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.587 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:04.801 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:04.802 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.803 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.803 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:04.803 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:04.805 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.806 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:04.806 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:04.806 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:04.807 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:04.807 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:04.808 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7876944c]
2019-02-03 14:55:04.808 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1495536205 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:04.809 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:55:04.809 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:55:04.811 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:55:04.811 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7876944c]
2019-02-03 14:55:04.812 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7876944c]
2019-02-03 14:55:04.812 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7876944c]
2019-02-03 14:55:04.812 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7876944c]
2019-02-03 14:55:04.814 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:04.814 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9230a9]
2019-02-03 14:55:04.815 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@597157075 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:04.815 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:55:04.816 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:55:04.817 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:55:04.818 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9230a9]
2019-02-03 14:55:04.818 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9230a9]
2019-02-03 14:55:04.818 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9230a9]
2019-02-03 14:55:04.819 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9230a9]
2019-02-03 14:55:05.208 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:05.209 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:55:05.210 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.210 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.211 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:05.211 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:05.211 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:05.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:05.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.212 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:05.809 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:05.810 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.810 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.811 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:05.811 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:05.811 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.812 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:05.812 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:05.812 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:05.813 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:05.813 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:05.814 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2763b313]
2019-02-03 14:55:05.815 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1395442576 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:05.815 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:55:05.816 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:55:05.818 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:55:05.818 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2763b313]
2019-02-03 14:55:05.819 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2763b313]
2019-02-03 14:55:05.819 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2763b313]
2019-02-03 14:55:05.820 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2763b313]
2019-02-03 14:55:05.820 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:05.821 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7835bb47]
2019-02-03 14:55:05.821 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@184873614 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:05.821 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:55:05.822 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:55:05.823 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:55:05.823 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7835bb47]
2019-02-03 14:55:05.824 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7835bb47]
2019-02-03 14:55:05.824 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7835bb47]
2019-02-03 14:55:05.824 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7835bb47]
2019-02-03 14:55:05.825 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:05.825 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f466f3]
2019-02-03 14:55:05.826 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2083307870 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:05.827 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:55:05.827 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:55:05.828 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:55:05.828 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f466f3]
2019-02-03 14:55:05.828 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f466f3]
2019-02-03 14:55:05.829 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f466f3]
2019-02-03 14:55:05.829 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f466f3]
2019-02-03 14:55:05.830 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:05.830 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecdd3f]
2019-02-03 14:55:05.830 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@170703948 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:05.831 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:55:05.831 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:55:05.832 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:55:05.832 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecdd3f]
2019-02-03 14:55:05.832 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecdd3f]
2019-02-03 14:55:05.833 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecdd3f]
2019-02-03 14:55:05.833 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecdd3f]
2019-02-03 14:55:05.834 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:05.834 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c73c36f]
2019-02-03 14:55:05.834 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1865666483 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:05.834 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:55:05.835 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:55:05.835 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:55:05.836 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c73c36f]
2019-02-03 14:55:05.836 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c73c36f]
2019-02-03 14:55:05.836 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c73c36f]
2019-02-03 14:55:05.837 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c73c36f]
2019-02-03 14:55:12.671 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:55:13.930 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:13.930 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:55:13.931 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:13.931 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:13.932 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:13.931 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:13.932 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:13.933 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:13.933 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:13.934 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:13.934 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:14.245 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:14.245 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:55:14.249 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.249 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.250 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:14.250 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:14.250 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.251 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:14.252 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:14.252 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.252 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:14.364 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:14.365 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.365 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.366 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:14.366 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:14.370 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.370 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:14.371 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:14.371 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.371 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:14.372 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.373 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17130801]
2019-02-03 14:55:14.374 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1706294074 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.374 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:55:14.375 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:55:14.377 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:55:14.378 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17130801]
2019-02-03 14:55:14.379 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17130801]
2019-02-03 14:55:14.379 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17130801]
2019-02-03 14:55:14.380 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17130801]
2019-02-03 14:55:14.381 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.382 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3842c66c]
2019-02-03 14:55:14.382 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1598425821 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.383 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:55:14.384 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:55:14.385 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:55:14.385 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3842c66c]
2019-02-03 14:55:14.386 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3842c66c]
2019-02-03 14:55:14.386 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3842c66c]
2019-02-03 14:55:14.386 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3842c66c]
2019-02-03 14:55:14.550 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:14.551 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.552 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.552 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:14.552 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:14.553 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.554 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:14.554 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:14.554 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:14.554 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:14.555 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.556 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f57c3d3]
2019-02-03 14:55:14.556 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@814582443 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.557 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:55:14.557 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:55:14.559 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:55:14.560 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f57c3d3]
2019-02-03 14:55:14.560 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f57c3d3]
2019-02-03 14:55:14.560 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f57c3d3]
2019-02-03 14:55:14.561 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f57c3d3]
2019-02-03 14:55:14.562 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.562 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f41c7ac]
2019-02-03 14:55:14.563 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1649677078 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.564 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:55:14.565 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:55:14.566 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:55:14.567 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f41c7ac]
2019-02-03 14:55:14.567 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f41c7ac]
2019-02-03 14:55:14.568 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f41c7ac]
2019-02-03 14:55:14.568 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f41c7ac]
2019-02-03 14:55:14.569 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.570 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e152b1c]
2019-02-03 14:55:14.570 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@859047009 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.571 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:55:14.572 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:55:14.573 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:55:14.573 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e152b1c]
2019-02-03 14:55:14.574 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e152b1c]
2019-02-03 14:55:14.574 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e152b1c]
2019-02-03 14:55:14.575 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e152b1c]
2019-02-03 14:55:14.576 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.576 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b6e]
2019-02-03 14:55:14.577 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@982660293 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.579 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:55:14.580 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:55:14.581 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:55:14.582 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b6e]
2019-02-03 14:55:14.582 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b6e]
2019-02-03 14:55:14.583 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b6e]
2019-02-03 14:55:14.583 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b6e]
2019-02-03 14:55:14.584 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:55:14.585 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1992542]
2019-02-03 14:55:14.586 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@552494676 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:55:14.587 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:55:14.587 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:55:14.588 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:55:14.589 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1992542]
2019-02-03 14:55:14.589 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1992542]
2019-02-03 14:55:14.590 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1992542]
2019-02-03 14:55:14.590 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1992542]
2019-02-03 14:55:30.922 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:55:30.922 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:55:30.923 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:30.923 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:30.924 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:55:30.924 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:55:30.924 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:30.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:55:30.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:55:30.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:55:30.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:55:42.672 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:56:12.674 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:56:24.778 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:24.782 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:56:24.782 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.783 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.784 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:24.784 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:24.785 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.785 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:24.786 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:24.786 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.786 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:24.890 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:24.890 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.891 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.895 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:24.895 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:24.896 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.896 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:24.897 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:24.897 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.898 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:24.898 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:24.899 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62eef9f0]
2019-02-03 14:56:24.899 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@335242560 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:24.900 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:56:24.900 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:56:24.902 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:24.902 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:56:24.902 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:56:24.902 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.902 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62eef9f0]
2019-02-03 14:56:24.903 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62eef9f0]
2019-02-03 14:56:24.903 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.903 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62eef9f0]
2019-02-03 14:56:24.903 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:24.903 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:24.904 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62eef9f0]
2019-02-03 14:56:24.904 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.904 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:24.905 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:24.905 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:24.905 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:24.905 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:24.905 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6f132d]
2019-02-03 14:56:24.906 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1662032834 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:24.906 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:56:24.908 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:56:24.909 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:56:24.909 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6f132d]
2019-02-03 14:56:24.910 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6f132d]
2019-02-03 14:56:24.910 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6f132d]
2019-02-03 14:56:24.911 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6f132d]
2019-02-03 14:56:25.559 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:25.560 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:25.561 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:25.561 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:25.561 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:25.562 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:25.563 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:25.563 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:25.564 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:25.564 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:25.565 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:25.565 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de75b1d]
2019-02-03 14:56:25.566 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@955220158 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:25.567 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:56:25.567 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:56:25.569 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:56:25.570 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de75b1d]
2019-02-03 14:56:25.570 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de75b1d]
2019-02-03 14:56:25.571 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de75b1d]
2019-02-03 14:56:25.571 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de75b1d]
2019-02-03 14:56:25.572 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:25.573 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731af5cf]
2019-02-03 14:56:25.574 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1456856657 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:25.575 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:56:25.575 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:56:25.576 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:56:25.576 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731af5cf]
2019-02-03 14:56:25.576 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731af5cf]
2019-02-03 14:56:25.577 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731af5cf]
2019-02-03 14:56:25.577 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731af5cf]
2019-02-03 14:56:25.578 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:25.578 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e2bed]
2019-02-03 14:56:25.578 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1723828727 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:25.579 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:56:25.579 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:56:25.580 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:56:25.581 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e2bed]
2019-02-03 14:56:25.581 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e2bed]
2019-02-03 14:56:25.582 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e2bed]
2019-02-03 14:56:25.582 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e2bed]
2019-02-03 14:56:25.583 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:25.583 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca340e]
2019-02-03 14:56:25.584 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1282764600 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:25.585 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:56:25.585 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:56:25.586 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:56:25.586 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca340e]
2019-02-03 14:56:25.587 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca340e]
2019-02-03 14:56:25.587 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca340e]
2019-02-03 14:56:25.587 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aca340e]
2019-02-03 14:56:25.588 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:25.589 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596f6b36]
2019-02-03 14:56:25.589 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1087385701 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:25.589 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:56:25.590 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:56:25.591 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:56:25.592 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596f6b36]
2019-02-03 14:56:25.592 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596f6b36]
2019-02-03 14:56:25.593 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596f6b36]
2019-02-03 14:56:25.593 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596f6b36]
2019-02-03 14:56:32.212 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:32.216 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:56:32.216 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:32.217 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:32.217 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:32.217 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:32.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:32.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:32.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:32.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:32.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:42.674 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:56:47.709 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:47.710 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:56:47.710 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.711 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.711 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:47.711 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:47.712 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:47.713 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.713 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:47.937 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:47.937 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:56:47.938 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.938 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.939 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:47.938 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:47.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.943 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:47.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:47.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:47.944 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:48.021 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:48.022 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.022 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.022 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:48.022 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:48.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.023 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:48.024 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:48.024 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.024 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:48.025 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.025 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e5e388]
2019-02-03 14:56:48.026 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1017081038 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.026 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:56:48.026 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:56:48.028 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:56:48.029 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e5e388]
2019-02-03 14:56:48.029 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e5e388]
2019-02-03 14:56:48.029 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e5e388]
2019-02-03 14:56:48.030 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e5e388]
2019-02-03 14:56:48.031 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.031 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae1a02f]
2019-02-03 14:56:48.032 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1634706837 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.032 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:56:48.033 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:56:48.034 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:56:48.034 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae1a02f]
2019-02-03 14:56:48.035 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae1a02f]
2019-02-03 14:56:48.035 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae1a02f]
2019-02-03 14:56:48.035 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae1a02f]
2019-02-03 14:56:48.642 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:48.644 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.644 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.645 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:48.645 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:48.645 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.646 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:48.646 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:48.646 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:48.646 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:56:48.647 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.647 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2293b620]
2019-02-03 14:56:48.648 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@561195598 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.648 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:56:48.649 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:56:48.650 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:56:48.651 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2293b620]
2019-02-03 14:56:48.651 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2293b620]
2019-02-03 14:56:48.652 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2293b620]
2019-02-03 14:56:48.653 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2293b620]
2019-02-03 14:56:48.654 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.654 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3083ad]
2019-02-03 14:56:48.655 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1777809119 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.655 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:56:48.655 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:56:48.656 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:56:48.657 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3083ad]
2019-02-03 14:56:48.657 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3083ad]
2019-02-03 14:56:48.658 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3083ad]
2019-02-03 14:56:48.658 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3083ad]
2019-02-03 14:56:48.659 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.660 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5407e4d7]
2019-02-03 14:56:48.661 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1871824693 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.661 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:56:48.662 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:56:48.663 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:56:48.663 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5407e4d7]
2019-02-03 14:56:48.664 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5407e4d7]
2019-02-03 14:56:48.664 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5407e4d7]
2019-02-03 14:56:48.665 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5407e4d7]
2019-02-03 14:56:48.666 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.666 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e61bbf0]
2019-02-03 14:56:48.667 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@964591144 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.667 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:56:48.668 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:56:48.669 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:56:48.670 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e61bbf0]
2019-02-03 14:56:48.670 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e61bbf0]
2019-02-03 14:56:48.671 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e61bbf0]
2019-02-03 14:56:48.671 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e61bbf0]
2019-02-03 14:56:48.672 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:56:48.673 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b6a159]
2019-02-03 14:56:48.674 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1093820707 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:56:48.674 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:56:48.675 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:56:48.676 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:56:48.677 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b6a159]
2019-02-03 14:56:48.677 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b6a159]
2019-02-03 14:56:48.677 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b6a159]
2019-02-03 14:56:48.678 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b6a159]
2019-02-03 14:56:51.859 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:56:51.860 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:56:51.860 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:51.860 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:51.864 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:56:51.864 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:56:51.864 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:51.865 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:56:51.865 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:56:51.865 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:56:51.865 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:57:12.676 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:57:42.677 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:58:01.762 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:01.763 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:58:01.764 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.764 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.764 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:01.764 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:01.765 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.765 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:01.766 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:01.766 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.766 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:01.961 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:01.962 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.963 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.963 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:01.963 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:01.968 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.968 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:01.969 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:01.969 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:01.969 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:01.970 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:01.970 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146c5b]
2019-02-03 14:58:01.971 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2051882809 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:01.971 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:58:01.972 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:58:01.974 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:58:01.974 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146c5b]
2019-02-03 14:58:01.975 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146c5b]
2019-02-03 14:58:01.978 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146c5b]
2019-02-03 14:58:01.978 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146c5b]
2019-02-03 14:58:01.980 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:01.980 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11581d04]
2019-02-03 14:58:01.981 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1668763881 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:01.981 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:58:01.982 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:58:01.983 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:58:01.984 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11581d04]
2019-02-03 14:58:01.984 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11581d04]
2019-02-03 14:58:01.984 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11581d04]
2019-02-03 14:58:01.985 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11581d04]
2019-02-03 14:58:02.215 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:02.216 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:58:02.216 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.217 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.217 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:02.217 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:02.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:02.218 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:02.219 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.219 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:02.586 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:02.588 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.588 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.589 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:02.589 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:02.589 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.590 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:02.590 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:02.590 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:02.591 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:02.592 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:02.593 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2424a05c]
2019-02-03 14:58:02.594 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1976160767 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:02.594 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:58:02.595 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:58:02.596 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:58:02.597 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2424a05c]
2019-02-03 14:58:02.597 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2424a05c]
2019-02-03 14:58:02.597 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2424a05c]
2019-02-03 14:58:02.598 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2424a05c]
2019-02-03 14:58:02.599 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:02.600 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48554920]
2019-02-03 14:58:02.600 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@403115469 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:02.601 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:58:02.602 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:58:02.603 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:58:02.604 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48554920]
2019-02-03 14:58:02.604 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48554920]
2019-02-03 14:58:02.605 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48554920]
2019-02-03 14:58:02.605 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48554920]
2019-02-03 14:58:02.606 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:02.607 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fd1d7a]
2019-02-03 14:58:02.607 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1179559056 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:02.608 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:58:02.609 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:58:02.610 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:58:02.610 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fd1d7a]
2019-02-03 14:58:02.611 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fd1d7a]
2019-02-03 14:58:02.611 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fd1d7a]
2019-02-03 14:58:02.611 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19fd1d7a]
2019-02-03 14:58:02.612 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:02.613 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e5e9af]
2019-02-03 14:58:02.613 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@415455534 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:02.614 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:58:02.615 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:58:02.616 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:58:02.617 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e5e9af]
2019-02-03 14:58:02.617 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e5e9af]
2019-02-03 14:58:02.618 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e5e9af]
2019-02-03 14:58:02.618 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e5e9af]
2019-02-03 14:58:02.619 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:02.620 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f40970]
2019-02-03 14:58:02.620 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2095021279 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:02.621 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:58:02.622 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:58:02.623 DEBUG --- [http-nio-9999-exec-6] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:58:02.623 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f40970]
2019-02-03 14:58:02.624 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f40970]
2019-02-03 14:58:02.624 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f40970]
2019-02-03 14:58:02.625 DEBUG --- [http-nio-9999-exec-6] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f40970]
2019-02-03 14:58:05.618 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:05.618 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:58:05.618 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:05.618 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:05.619 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:05.619 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:05.623 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:05.623 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:05.623 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:05.623 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:05.624 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:12.678 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:58:16.516 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:16.517 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:58:16.517 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.518 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.519 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:16.519 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:16.519 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.520 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:16.520 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:16.520 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.521 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:16.679 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:16.680 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:58:16.680 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.680 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.681 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:16.681 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:16.682 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.682 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:16.682 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:16.682 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.682 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:16.687 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:16.688 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.688 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.690 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:16.690 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:16.690 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.691 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:16.691 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:16.691 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:16.691 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:16.692 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:16.693 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3485702b]
2019-02-03 14:58:16.693 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1429470636 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:16.694 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:58:16.694 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:58:16.696 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:58:16.697 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3485702b]
2019-02-03 14:58:16.697 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3485702b]
2019-02-03 14:58:16.697 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3485702b]
2019-02-03 14:58:16.698 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3485702b]
2019-02-03 14:58:16.699 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:16.700 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9f4c33]
2019-02-03 14:58:16.701 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1214016545 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:16.701 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:58:16.702 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:58:16.703 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:58:16.704 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9f4c33]
2019-02-03 14:58:16.704 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9f4c33]
2019-02-03 14:58:16.705 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9f4c33]
2019-02-03 14:58:16.705 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9f4c33]
2019-02-03 14:58:17.327 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:17.328 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:17.329 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:17.329 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:17.329 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:17.330 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:17.330 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:17.330 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:17.331 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:17.331 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:17.331 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:17.332 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8c2e92]
2019-02-03 14:58:17.332 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1874249917 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:17.333 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:58:17.333 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:58:17.338 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:58:17.339 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8c2e92]
2019-02-03 14:58:17.339 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8c2e92]
2019-02-03 14:58:17.340 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8c2e92]
2019-02-03 14:58:17.340 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8c2e92]
2019-02-03 14:58:17.342 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:17.342 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc2f75c]
2019-02-03 14:58:17.343 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@418515961 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:17.343 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:58:17.344 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:58:17.345 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:58:17.345 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc2f75c]
2019-02-03 14:58:17.345 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc2f75c]
2019-02-03 14:58:17.346 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc2f75c]
2019-02-03 14:58:17.347 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc2f75c]
2019-02-03 14:58:17.348 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:17.348 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f313af]
2019-02-03 14:58:17.349 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@765362958 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:17.349 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:58:17.350 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:58:17.351 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:58:17.352 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f313af]
2019-02-03 14:58:17.352 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f313af]
2019-02-03 14:58:17.352 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f313af]
2019-02-03 14:58:17.353 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f313af]
2019-02-03 14:58:17.354 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:17.354 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af97a5]
2019-02-03 14:58:17.355 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@857491733 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:17.355 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:58:17.356 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:58:17.356 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:58:17.357 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af97a5]
2019-02-03 14:58:17.358 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af97a5]
2019-02-03 14:58:17.358 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af97a5]
2019-02-03 14:58:17.358 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af97a5]
2019-02-03 14:58:17.359 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:58:17.359 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b792602]
2019-02-03 14:58:17.360 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@548807801 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:58:17.360 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:58:17.361 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:58:17.362 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:58:17.362 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b792602]
2019-02-03 14:58:17.362 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b792602]
2019-02-03 14:58:17.363 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b792602]
2019-02-03 14:58:17.363 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b792602]
2019-02-03 14:58:19.082 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:19.083 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:58:19.083 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:19.084 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:19.084 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:19.084 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:19.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:19.085 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:19.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:19.086 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:19.089 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:23.410 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:58:23.411 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:58:23.411 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:23.412 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:23.412 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:58:23.412 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:58:23.412 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:23.413 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:58:23.413 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:58:23.413 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:58:23.413 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:58:42.680 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:59:04.229 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:59:04.230 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 14:59:04.230 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.230 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.234 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:59:04.234 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:59:04.235 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.235 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:59:04.236 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:59:04.236 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.236 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:59:04.484 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:59:04.484 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:59:04.485 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.486 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.486 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:59:04.487 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.487 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:59:04.486 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:59:04.487 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:59:04.488 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.488 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:59:04.508 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:59:04.509 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.510 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.510 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:59:04.510 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:59:04.512 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.513 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:59:04.513 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:59:04.513 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.513 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:59:04.514 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.515 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c351bec]
2019-02-03 14:59:04.515 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1442169293 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.516 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 14:59:04.516 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:59:04.518 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 14:59:04.518 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c351bec]
2019-02-03 14:59:04.518 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c351bec]
2019-02-03 14:59:04.520 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c351bec]
2019-02-03 14:59:04.520 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c351bec]
2019-02-03 14:59:04.521 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.522 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff48327]
2019-02-03 14:59:04.522 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1732729151 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.523 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:59:04.523 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:59:04.524 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 14:59:04.525 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff48327]
2019-02-03 14:59:04.526 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff48327]
2019-02-03 14:59:04.526 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff48327]
2019-02-03 14:59:04.526 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff48327]
2019-02-03 14:59:04.954 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:59:04.955 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.955 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.956 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:59:04.956 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:59:04.956 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.957 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:59:04.957 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:59:04.957 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:04.957 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:59:04.958 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.958 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28feb061]
2019-02-03 14:59:04.959 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2058157243 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.960 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 14:59:04.960 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 14:59:04.961 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 14:59:04.962 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28feb061]
2019-02-03 14:59:04.962 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28feb061]
2019-02-03 14:59:04.962 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28feb061]
2019-02-03 14:59:04.963 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28feb061]
2019-02-03 14:59:04.964 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.964 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dad95d6]
2019-02-03 14:59:04.965 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@58677249 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.965 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 14:59:04.965 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 14:59:04.966 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 14:59:04.966 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dad95d6]
2019-02-03 14:59:04.967 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dad95d6]
2019-02-03 14:59:04.967 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dad95d6]
2019-02-03 14:59:04.967 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dad95d6]
2019-02-03 14:59:04.968 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.968 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1533a7a4]
2019-02-03 14:59:04.968 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@22325617 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.969 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:59:04.969 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:59:04.971 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:59:04.971 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1533a7a4]
2019-02-03 14:59:04.971 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1533a7a4]
2019-02-03 14:59:04.972 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1533a7a4]
2019-02-03 14:59:04.972 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1533a7a4]
2019-02-03 14:59:04.973 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.974 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321cd7ae]
2019-02-03 14:59:04.974 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@858365119 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.974 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:59:04.975 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:59:04.975 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:59:04.976 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321cd7ae]
2019-02-03 14:59:04.976 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321cd7ae]
2019-02-03 14:59:04.977 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321cd7ae]
2019-02-03 14:59:04.977 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321cd7ae]
2019-02-03 14:59:04.978 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 14:59:04.978 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57aeff6b]
2019-02-03 14:59:04.979 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1126960286 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 14:59:04.979 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 14:59:04.979 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 14:59:04.980 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 14:59:04.980 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57aeff6b]
2019-02-03 14:59:04.981 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57aeff6b]
2019-02-03 14:59:04.981 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57aeff6b]
2019-02-03 14:59:04.981 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57aeff6b]
2019-02-03 14:59:12.681 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 14:59:13.771 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 14:59:13.772 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 14:59:13.773 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:13.773 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:13.773 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 14:59:13.773 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 14:59:13.774 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:13.774 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 14:59:13.774 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 14:59:13.774 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 14:59:13.775 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 14:59:42.682 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:00:12.684 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:00:42.685 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:01:10.960 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:01:10.960 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:01:10.961 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:10.961 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:10.962 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:01:10.962 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:01:10.962 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:10.963 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:01:10.963 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:01:10.964 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:10.964 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:01:11.075 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:01:11.076 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:01:11.076 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.077 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.077 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:01:11.077 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:01:11.078 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.078 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:01:11.079 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:01:11.079 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.080 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:01:11.090 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:01:11.091 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.092 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.092 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:01:11.092 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:01:11.093 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.093 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:01:11.094 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:01:11.094 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:11.094 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:01:11.095 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:11.095 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391f9220]
2019-02-03 15:01:11.096 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@84127993 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:11.096 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:01:11.097 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:01:11.098 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:01:11.098 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391f9220]
2019-02-03 15:01:11.099 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391f9220]
2019-02-03 15:01:11.099 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391f9220]
2019-02-03 15:01:11.100 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391f9220]
2019-02-03 15:01:11.101 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:11.102 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da34c46]
2019-02-03 15:01:11.103 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1086535166 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:11.104 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:01:11.104 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:01:11.106 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:01:11.107 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da34c46]
2019-02-03 15:01:11.107 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da34c46]
2019-02-03 15:01:11.108 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da34c46]
2019-02-03 15:01:11.108 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da34c46]
2019-02-03 15:01:12.208 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:01:12.208 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:12.209 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:12.209 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:01:12.209 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:01:12.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:12.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:01:12.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:01:12.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:01:12.214 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:01:12.215 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:12.215 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6bbb]
2019-02-03 15:01:12.216 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1618593509 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:12.216 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:01:12.216 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:01:12.217 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:01:12.217 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6bbb]
2019-02-03 15:01:12.217 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6bbb]
2019-02-03 15:01:12.218 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6bbb]
2019-02-03 15:01:12.218 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6bbb]
2019-02-03 15:01:12.219 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:12.219 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57716502]
2019-02-03 15:01:12.220 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@936098072 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:12.220 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:01:12.220 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:01:12.221 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:01:12.221 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57716502]
2019-02-03 15:01:12.221 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57716502]
2019-02-03 15:01:12.221 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57716502]
2019-02-03 15:01:12.222 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57716502]
2019-02-03 15:01:12.223 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:12.223 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a9b0f65]
2019-02-03 15:01:12.223 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2017579642 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:12.223 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:01:12.224 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:01:12.225 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:01:12.225 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a9b0f65]
2019-02-03 15:01:12.226 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a9b0f65]
2019-02-03 15:01:12.226 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a9b0f65]
2019-02-03 15:01:12.227 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a9b0f65]
2019-02-03 15:01:12.228 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:12.228 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1650d]
2019-02-03 15:01:12.229 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1392573239 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:12.229 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:01:12.229 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:01:12.230 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:01:12.230 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1650d]
2019-02-03 15:01:12.230 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1650d]
2019-02-03 15:01:12.231 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1650d]
2019-02-03 15:01:12.231 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1650d]
2019-02-03 15:01:12.232 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:01:12.232 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566fff52]
2019-02-03 15:01:12.233 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1625350724 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:01:12.233 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:01:12.234 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:01:12.235 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:01:12.235 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566fff52]
2019-02-03 15:01:12.236 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566fff52]
2019-02-03 15:01:12.236 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566fff52]
2019-02-03 15:01:12.237 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566fff52]
2019-02-03 15:01:12.686 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:01:42.687 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:02:12.688 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:02:39.143 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:02:39.144 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:02:39.145 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.146 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.146 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:02:39.146 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:02:39.147 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.148 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:02:39.148 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:02:39.148 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.149 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:02:39.701 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:02:39.706 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.706 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.707 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:02:39.707 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:02:39.709 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.709 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:02:39.710 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:02:39.710 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:39.710 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:02:39.711 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:39.712 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ea05dc]
2019-02-03 15:02:39.712 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@335983446 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:39.712 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:02:39.714 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:02:39.715 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:02:39.715 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ea05dc]
2019-02-03 15:02:39.716 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ea05dc]
2019-02-03 15:02:39.716 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ea05dc]
2019-02-03 15:02:39.717 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ea05dc]
2019-02-03 15:02:39.718 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:39.719 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641f4f78]
2019-02-03 15:02:39.721 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1148283586 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:39.721 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:02:39.722 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:02:39.723 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:02:39.723 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641f4f78]
2019-02-03 15:02:39.724 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641f4f78]
2019-02-03 15:02:39.724 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641f4f78]
2019-02-03 15:02:39.724 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641f4f78]
2019-02-03 15:02:40.345 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:02:40.347 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:40.348 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:40.349 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:02:40.349 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:02:40.350 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:40.350 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:02:40.350 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:02:40.350 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:40.351 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:02:40.355 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:40.355 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578c1d26]
2019-02-03 15:02:40.356 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@916124538 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:40.356 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:02:40.357 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:02:40.358 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:02:40.359 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578c1d26]
2019-02-03 15:02:40.360 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578c1d26]
2019-02-03 15:02:40.361 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578c1d26]
2019-02-03 15:02:40.362 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578c1d26]
2019-02-03 15:02:40.364 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:40.365 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78444f7b]
2019-02-03 15:02:40.366 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@437033481 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:40.366 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:02:40.367 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:02:40.368 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:02:40.368 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78444f7b]
2019-02-03 15:02:40.369 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78444f7b]
2019-02-03 15:02:40.369 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78444f7b]
2019-02-03 15:02:40.370 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78444f7b]
2019-02-03 15:02:40.371 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:40.371 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c115914]
2019-02-03 15:02:40.372 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1103545146 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:40.372 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:02:40.373 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:02:40.374 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:02:40.374 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c115914]
2019-02-03 15:02:40.376 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c115914]
2019-02-03 15:02:40.377 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c115914]
2019-02-03 15:02:40.378 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c115914]
2019-02-03 15:02:40.380 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:40.382 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3ca622]
2019-02-03 15:02:40.382 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1317512408 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:40.383 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:02:40.384 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:02:40.385 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:02:40.386 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3ca622]
2019-02-03 15:02:40.386 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3ca622]
2019-02-03 15:02:40.387 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3ca622]
2019-02-03 15:02:40.388 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3ca622]
2019-02-03 15:02:40.389 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:02:40.389 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a5e85d]
2019-02-03 15:02:40.390 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1938828371 wrapping com.mysql.jdbc.JDBC4Connection@6d5eb1dc] will be managed by Spring
2019-02-03 15:02:40.391 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:02:40.391 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:02:40.394 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:02:40.395 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a5e85d]
2019-02-03 15:02:40.396 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a5e85d]
2019-02-03 15:02:40.397 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a5e85d]
2019-02-03 15:02:40.398 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a5e85d]
2019-02-03 15:02:42.690 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:02:46.521 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:02:46.522 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:02:46.522 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:46.522 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:46.523 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:02:46.523 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:02:46.523 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:46.524 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:02:46.524 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:02:46.525 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:02:46.525 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:03:12.691 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:03:42.692 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:03:52.257 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@544e0167: (connection has passed maxLifetime)
2019-02-03 15:03:52.263 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@f3faaa8
2019-02-03 15:03:53.279 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6d5eb1dc: (connection has passed maxLifetime)
2019-02-03 15:03:53.285 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7bbdbd23
2019-02-03 15:03:57.598 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@36996a7: (connection has passed maxLifetime)
2019-02-03 15:03:57.603 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@247669df
2019-02-03 15:03:58.863 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1d5326b: (connection has passed maxLifetime)
2019-02-03 15:03:58.868 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2e5c94cf
2019-02-03 15:04:03.538 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@979d3c7: (connection has passed maxLifetime)
2019-02-03 15:04:03.545 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@346500e1
2019-02-03 15:04:05.939 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1b2085c2: (connection has passed maxLifetime)
2019-02-03 15:04:05.945 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4fae4718
2019-02-03 15:04:08.917 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5a00201b: (connection has passed maxLifetime)
2019-02-03 15:04:08.925 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@795c0e3a
2019-02-03 15:04:12.606 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@752d5258: (connection has passed maxLifetime)
2019-02-03 15:04:12.612 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1b437c13
2019-02-03 15:04:12.694 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:04:17.763 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:17.767 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.768 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.769 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:17.769 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:17.770 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:17.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:17.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.771 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:17.772 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:17.773 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8ae681]
2019-02-03 15:04:17.773 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1941188171 wrapping com.mysql.jdbc.JDBC4Connection@19e8f7e0] will be managed by Spring
2019-02-03 15:04:17.774 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:04:17.775 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:04:17.778 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:04:17.779 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8ae681]
2019-02-03 15:04:17.779 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8ae681]
2019-02-03 15:04:17.780 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8ae681]
2019-02-03 15:04:17.780 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8ae681]
2019-02-03 15:04:17.782 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:17.783 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c7267]
2019-02-03 15:04:17.783 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1667336376 wrapping com.mysql.jdbc.JDBC4Connection@19e8f7e0] will be managed by Spring
2019-02-03 15:04:17.783 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:04:17.784 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:04:17.785 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:04:17.785 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c7267]
2019-02-03 15:04:17.786 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c7267]
2019-02-03 15:04:17.786 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c7267]
2019-02-03 15:04:17.786 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c7267]
2019-02-03 15:04:17.825 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:17.825 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:04:17.826 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.827 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.827 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:17.827 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:17.828 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.828 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:17.828 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:17.829 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:17.829 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:18.501 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@19e8f7e0: (connection has passed maxLifetime)
2019-02-03 15:04:18.505 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2c63472e
2019-02-03 15:04:18.810 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:18.811 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:18.811 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:18.812 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:18.812 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:18.812 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:18.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:18.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:18.814 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:18.815 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:18.816 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:18.816 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d8dd3]
2019-02-03 15:04:18.817 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@68926279 wrapping com.mysql.jdbc.JDBC4Connection@61664ca0] will be managed by Spring
2019-02-03 15:04:18.817 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:04:18.818 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:04:18.823 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:04:18.823 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d8dd3]
2019-02-03 15:04:18.824 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d8dd3]
2019-02-03 15:04:18.825 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d8dd3]
2019-02-03 15:04:18.825 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d8dd3]
2019-02-03 15:04:18.826 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:18.827 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702f990c]
2019-02-03 15:04:18.828 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@477836792 wrapping com.mysql.jdbc.JDBC4Connection@61664ca0] will be managed by Spring
2019-02-03 15:04:18.828 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:04:18.829 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:04:18.830 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:04:18.830 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702f990c]
2019-02-03 15:04:18.831 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702f990c]
2019-02-03 15:04:18.831 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702f990c]
2019-02-03 15:04:18.832 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702f990c]
2019-02-03 15:04:18.833 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:18.833 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12618e14]
2019-02-03 15:04:18.834 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2079346274 wrapping com.mysql.jdbc.JDBC4Connection@61664ca0] will be managed by Spring
2019-02-03 15:04:18.834 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:04:18.835 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:04:18.837 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:04:18.837 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12618e14]
2019-02-03 15:04:18.838 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12618e14]
2019-02-03 15:04:18.838 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12618e14]
2019-02-03 15:04:18.838 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12618e14]
2019-02-03 15:04:18.839 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:18.840 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff6a98c]
2019-02-03 15:04:18.841 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@971192586 wrapping com.mysql.jdbc.JDBC4Connection@61664ca0] will be managed by Spring
2019-02-03 15:04:18.842 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:04:18.842 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:04:18.844 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:04:18.845 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff6a98c]
2019-02-03 15:04:18.845 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff6a98c]
2019-02-03 15:04:18.846 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff6a98c]
2019-02-03 15:04:18.846 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff6a98c]
2019-02-03 15:04:18.848 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:18.848 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eedc1fe]
2019-02-03 15:04:18.848 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2045438570 wrapping com.mysql.jdbc.JDBC4Connection@61664ca0] will be managed by Spring
2019-02-03 15:04:18.849 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:04:18.850 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:04:18.851 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:04:18.851 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eedc1fe]
2019-02-03 15:04:18.852 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eedc1fe]
2019-02-03 15:04:18.853 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eedc1fe]
2019-02-03 15:04:18.853 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eedc1fe]
2019-02-03 15:04:21.419 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:21.420 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:04:21.420 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:21.420 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:21.421 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:21.421 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:21.421 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:21.426 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:21.426 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:21.426 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:21.426 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:24.099 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@61664ca0: (connection has passed maxLifetime)
2019-02-03 15:04:24.102 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@f4606b2
2019-02-03 15:04:42.694 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:04:45.517 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:45.517 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:04:45.518 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:45.519 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:45.519 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:45.519 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:45.521 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:45.522 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:45.522 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:45.522 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:45.522 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:46.159 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:46.160 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.161 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.162 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:46.162 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:46.163 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.163 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:46.163 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:46.164 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.164 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:46.166 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:46.167 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7101bb2]
2019-02-03 15:04:46.168 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1390161653 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:46.169 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:04:46.171 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:04:46.175 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:04:46.176 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7101bb2]
2019-02-03 15:04:46.177 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7101bb2]
2019-02-03 15:04:46.178 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7101bb2]
2019-02-03 15:04:46.180 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7101bb2]
2019-02-03 15:04:46.182 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:46.183 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fb88e91]
2019-02-03 15:04:46.184 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@21337418 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:46.184 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:04:46.185 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:04:46.186 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:04:46.187 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fb88e91]
2019-02-03 15:04:46.190 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fb88e91]
2019-02-03 15:04:46.191 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fb88e91]
2019-02-03 15:04:46.192 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fb88e91]
2019-02-03 15:04:46.269 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:46.270 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:04:46.270 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.271 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.272 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:46.272 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:46.273 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.274 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:46.274 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:46.274 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.275 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:46.978 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:04:46.979 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.979 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.980 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:04:46.980 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:04:46.984 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.985 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:04:46.985 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:04:46.985 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:04:46.985 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:04:46.986 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:46.987 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376d05c7]
2019-02-03 15:04:46.987 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@490091784 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:46.988 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:04:46.988 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:04:46.993 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:04:46.993 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376d05c7]
2019-02-03 15:04:46.994 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376d05c7]
2019-02-03 15:04:46.994 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376d05c7]
2019-02-03 15:04:46.995 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376d05c7]
2019-02-03 15:04:46.996 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:46.996 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7832082c]
2019-02-03 15:04:46.996 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@844342454 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:46.997 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:04:46.998 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:04:46.999 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:04:46.999 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7832082c]
2019-02-03 15:04:47.000 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7832082c]
2019-02-03 15:04:47.000 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7832082c]
2019-02-03 15:04:47.000 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7832082c]
2019-02-03 15:04:47.001 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:47.001 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f18085]
2019-02-03 15:04:47.002 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1304728245 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:47.003 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:04:47.003 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:04:47.004 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:04:47.005 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f18085]
2019-02-03 15:04:47.005 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f18085]
2019-02-03 15:04:47.005 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f18085]
2019-02-03 15:04:47.006 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f18085]
2019-02-03 15:04:47.007 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:47.008 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28ca25e4]
2019-02-03 15:04:47.008 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@4765976 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:47.009 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:04:47.009 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:04:47.010 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:04:47.011 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28ca25e4]
2019-02-03 15:04:47.011 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28ca25e4]
2019-02-03 15:04:47.011 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28ca25e4]
2019-02-03 15:04:47.012 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28ca25e4]
2019-02-03 15:04:47.013 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:04:47.013 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66165d19]
2019-02-03 15:04:47.014 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1835966434 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:04:47.014 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:04:47.015 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:04:47.016 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:04:47.016 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66165d19]
2019-02-03 15:04:47.016 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66165d19]
2019-02-03 15:04:47.017 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66165d19]
2019-02-03 15:04:47.017 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66165d19]
2019-02-03 15:05:12.695 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:05:41.797 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:05:41.798 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:05:41.798 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:05:41.799 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:05:41.803 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:05:41.803 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:05:41.804 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:05:41.804 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:05:41.805 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:05:41.805 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:05:41.805 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:05:42.696 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:06:12.698 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:06:41.666 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:06:41.667 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:06:41.667 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:41.668 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:41.668 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:06:41.668 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:06:41.671 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:41.671 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:06:41.672 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:06:41.672 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:41.672 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:06:42.217 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:06:42.217 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:06:42.219 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.219 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:06:42.220 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:06:42.220 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:06:42.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:06:42.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.221 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:06:42.312 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:06:42.313 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.314 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.314 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:06:42.314 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:06:42.315 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.315 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:06:42.315 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:06:42.316 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.316 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:06:42.316 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.317 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568fa817]
2019-02-03 15:06:42.317 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2038040854 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.318 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:06:42.318 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:06:42.319 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:06:42.320 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568fa817]
2019-02-03 15:06:42.320 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568fa817]
2019-02-03 15:06:42.322 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568fa817]
2019-02-03 15:06:42.322 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568fa817]
2019-02-03 15:06:42.323 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.324 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce6c6fc]
2019-02-03 15:06:42.324 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1262305361 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.325 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:06:42.326 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:06:42.327 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:06:42.328 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce6c6fc]
2019-02-03 15:06:42.328 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce6c6fc]
2019-02-03 15:06:42.329 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce6c6fc]
2019-02-03 15:06:42.329 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce6c6fc]
2019-02-03 15:06:42.556 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:06:42.557 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.558 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.558 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:06:42.558 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:06:42.559 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.560 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:06:42.560 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:06:42.560 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:06:42.561 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:06:42.561 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.561 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7873ca3b]
2019-02-03 15:06:42.562 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1813355054 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.562 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:06:42.563 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:06:42.565 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:06:42.565 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7873ca3b]
2019-02-03 15:06:42.566 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7873ca3b]
2019-02-03 15:06:42.566 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7873ca3b]
2019-02-03 15:06:42.566 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7873ca3b]
2019-02-03 15:06:42.567 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.568 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b25df9]
2019-02-03 15:06:42.569 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1600859326 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.569 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:06:42.570 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:06:42.570 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:06:42.571 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b25df9]
2019-02-03 15:06:42.571 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b25df9]
2019-02-03 15:06:42.572 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b25df9]
2019-02-03 15:06:42.572 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b25df9]
2019-02-03 15:06:42.573 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.574 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aad133]
2019-02-03 15:06:42.574 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@883946954 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.575 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:06:42.576 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:06:42.578 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:06:42.580 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aad133]
2019-02-03 15:06:42.581 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aad133]
2019-02-03 15:06:42.581 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aad133]
2019-02-03 15:06:42.581 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aad133]
2019-02-03 15:06:42.582 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.583 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e09ecd]
2019-02-03 15:06:42.583 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2028182869 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.583 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:06:42.584 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:06:42.585 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:06:42.585 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e09ecd]
2019-02-03 15:06:42.586 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e09ecd]
2019-02-03 15:06:42.586 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e09ecd]
2019-02-03 15:06:42.587 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e09ecd]
2019-02-03 15:06:42.588 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:06:42.588 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e1ae5]
2019-02-03 15:06:42.589 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@379909611 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:06:42.590 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:06:42.591 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:06:42.593 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:06:42.593 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e1ae5]
2019-02-03 15:06:42.594 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e1ae5]
2019-02-03 15:06:42.595 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e1ae5]
2019-02-03 15:06:42.596 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e1ae5]
2019-02-03 15:06:42.698 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:07:02.696 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:02.697 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:07:02.697 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:02.698 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:02.698 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:02.698 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:02.699 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:02.699 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:02.700 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:02.703 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:02.704 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:03.362 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:03.362 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:07:03.362 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.363 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.363 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:03.363 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:03.364 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.364 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:03.365 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:03.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.369 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:03.401 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:03.402 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.402 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.402 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:03.403 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:03.403 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.404 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:03.404 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:03.404 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.404 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:03.405 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.406 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b5be07]
2019-02-03 15:07:03.407 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@940514526 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.408 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:07:03.408 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:07:03.409 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:07:03.410 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b5be07]
2019-02-03 15:07:03.410 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b5be07]
2019-02-03 15:07:03.410 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b5be07]
2019-02-03 15:07:03.411 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b5be07]
2019-02-03 15:07:03.412 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.412 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17aaf5f6]
2019-02-03 15:07:03.413 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1859542505 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.413 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:07:03.414 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:07:03.415 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:07:03.416 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17aaf5f6]
2019-02-03 15:07:03.416 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17aaf5f6]
2019-02-03 15:07:03.417 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17aaf5f6]
2019-02-03 15:07:03.417 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17aaf5f6]
2019-02-03 15:07:03.719 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:03.720 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.720 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.721 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:03.721 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:03.722 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.722 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:03.722 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:03.723 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:03.723 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:03.724 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.724 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123a8a50]
2019-02-03 15:07:03.725 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@153468765 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.725 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:07:03.726 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:07:03.727 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:07:03.727 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123a8a50]
2019-02-03 15:07:03.728 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123a8a50]
2019-02-03 15:07:03.728 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123a8a50]
2019-02-03 15:07:03.728 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123a8a50]
2019-02-03 15:07:03.729 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.731 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756b5e4d]
2019-02-03 15:07:03.731 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1497725132 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.732 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:07:03.732 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:07:03.733 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:07:03.734 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756b5e4d]
2019-02-03 15:07:03.734 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756b5e4d]
2019-02-03 15:07:03.734 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756b5e4d]
2019-02-03 15:07:03.735 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756b5e4d]
2019-02-03 15:07:03.736 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.736 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14aeb4]
2019-02-03 15:07:03.737 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@477057142 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.737 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:07:03.738 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:07:03.739 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:07:03.739 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14aeb4]
2019-02-03 15:07:03.740 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14aeb4]
2019-02-03 15:07:03.740 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14aeb4]
2019-02-03 15:07:03.741 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14aeb4]
2019-02-03 15:07:03.742 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.742 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9b46d2]
2019-02-03 15:07:03.743 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@785458784 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.743 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:07:03.744 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:07:03.745 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:07:03.746 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9b46d2]
2019-02-03 15:07:03.746 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9b46d2]
2019-02-03 15:07:03.746 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9b46d2]
2019-02-03 15:07:03.747 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9b46d2]
2019-02-03 15:07:03.748 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:03.748 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20e82871]
2019-02-03 15:07:03.749 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1179311426 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:03.749 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:07:03.750 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:07:03.751 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:07:03.751 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20e82871]
2019-02-03 15:07:03.752 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20e82871]
2019-02-03 15:07:03.752 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20e82871]
2019-02-03 15:07:03.752 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20e82871]
2019-02-03 15:07:12.700 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:07:42.700 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:07:47.375 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:47.376 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:07:47.377 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.377 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.378 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:47.378 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:47.379 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:47.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:47.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.380 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:47.772 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:47.773 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.774 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.775 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:47.774 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:47.775 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.776 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:47.776 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:47.776 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:47.776 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:47.778 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:47.778 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ce28ee]
2019-02-03 15:07:47.778 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@871193169 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:47.779 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:07:47.779 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:07:47.781 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:07:47.782 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ce28ee]
2019-02-03 15:07:47.782 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ce28ee]
2019-02-03 15:07:47.782 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ce28ee]
2019-02-03 15:07:47.783 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ce28ee]
2019-02-03 15:07:47.784 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:47.784 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641da5f9]
2019-02-03 15:07:47.785 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1256137142 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:47.785 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:07:47.785 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:07:47.786 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:07:47.787 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641da5f9]
2019-02-03 15:07:47.787 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641da5f9]
2019-02-03 15:07:47.788 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641da5f9]
2019-02-03 15:07:47.788 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641da5f9]
2019-02-03 15:07:48.014 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:48.018 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:48.018 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:48.019 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:48.019 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:48.019 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:48.020 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:48.020 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:48.020 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:48.020 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:07:48.021 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:48.021 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ded869f]
2019-02-03 15:07:48.022 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1188342167 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:48.022 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:07:48.023 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:07:48.025 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:07:48.025 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ded869f]
2019-02-03 15:07:48.026 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ded869f]
2019-02-03 15:07:48.026 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ded869f]
2019-02-03 15:07:48.027 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ded869f]
2019-02-03 15:07:48.028 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:48.028 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc2d508]
2019-02-03 15:07:48.029 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1778525620 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:48.030 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:07:48.030 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:07:48.031 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:07:48.032 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc2d508]
2019-02-03 15:07:48.032 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc2d508]
2019-02-03 15:07:48.032 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc2d508]
2019-02-03 15:07:48.032 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc2d508]
2019-02-03 15:07:48.033 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:48.034 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c4d413]
2019-02-03 15:07:48.034 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1518126204 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:48.034 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:07:48.035 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:07:48.036 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:07:48.036 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c4d413]
2019-02-03 15:07:48.036 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c4d413]
2019-02-03 15:07:48.037 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c4d413]
2019-02-03 15:07:48.037 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c4d413]
2019-02-03 15:07:48.038 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:48.038 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fd6787]
2019-02-03 15:07:48.039 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1771177348 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:48.040 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:07:48.040 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:07:48.041 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:07:48.042 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fd6787]
2019-02-03 15:07:48.043 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fd6787]
2019-02-03 15:07:48.043 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fd6787]
2019-02-03 15:07:48.043 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fd6787]
2019-02-03 15:07:48.044 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:07:48.044 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751c11c]
2019-02-03 15:07:48.045 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@131585842 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:07:48.046 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:07:48.046 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:07:48.047 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:07:48.048 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751c11c]
2019-02-03 15:07:48.048 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751c11c]
2019-02-03 15:07:48.049 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751c11c]
2019-02-03 15:07:48.049 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7751c11c]
2019-02-03 15:07:52.180 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:07:52.181 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:07:52.181 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:52.181 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:52.185 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:07:52.185 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:07:52.186 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:52.186 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:07:52.186 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:07:52.186 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:07:52.186 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:12.701 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:08:36.553 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:36.553 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.554 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.554 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:36.554 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:36.557 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.558 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:36.558 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:36.558 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.558 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:36.559 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:36.560 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356be15e]
2019-02-03 15:08:36.560 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@813316321 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:36.561 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:08:36.562 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:08:36.563 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:08:36.564 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356be15e]
2019-02-03 15:08:36.564 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356be15e]
2019-02-03 15:08:36.565 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356be15e]
2019-02-03 15:08:36.565 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356be15e]
2019-02-03 15:08:36.566 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:36.567 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7389b21]
2019-02-03 15:08:36.568 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1711744430 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:36.568 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:08:36.569 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:08:36.570 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:08:36.571 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7389b21]
2019-02-03 15:08:36.571 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7389b21]
2019-02-03 15:08:36.571 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7389b21]
2019-02-03 15:08:36.572 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7389b21]
2019-02-03 15:08:36.672 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:36.673 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:08:36.674 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.674 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.676 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:36.676 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:36.677 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.678 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:36.678 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:36.678 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.678 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:36.898 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:36.899 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:08:36.899 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.900 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.900 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:36.901 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.901 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:36.900 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:36.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:36.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:36.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:37.143 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:37.144 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:37.144 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:37.145 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:37.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:37.147 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:37.148 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:37.148 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:37.149 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:37.149 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:37.149 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:37.150 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3e5ed5]
2019-02-03 15:08:37.150 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1585950386 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:37.150 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:08:37.151 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:08:37.153 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:08:37.153 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3e5ed5]
2019-02-03 15:08:37.154 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3e5ed5]
2019-02-03 15:08:37.154 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3e5ed5]
2019-02-03 15:08:37.155 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f3e5ed5]
2019-02-03 15:08:37.156 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:37.156 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f465597]
2019-02-03 15:08:37.157 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@705014556 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:37.157 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:08:37.159 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:08:37.160 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:08:37.160 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f465597]
2019-02-03 15:08:37.161 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f465597]
2019-02-03 15:08:37.161 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f465597]
2019-02-03 15:08:37.161 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f465597]
2019-02-03 15:08:37.162 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:37.163 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bb2802]
2019-02-03 15:08:37.163 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@202535887 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:37.163 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:08:37.164 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:08:37.165 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:08:37.166 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bb2802]
2019-02-03 15:08:37.166 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bb2802]
2019-02-03 15:08:37.166 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bb2802]
2019-02-03 15:08:37.166 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bb2802]
2019-02-03 15:08:37.167 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:37.168 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405aa721]
2019-02-03 15:08:37.168 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1307682411 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:37.169 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:08:37.170 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:08:37.171 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:08:37.172 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405aa721]
2019-02-03 15:08:37.172 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405aa721]
2019-02-03 15:08:37.173 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405aa721]
2019-02-03 15:08:37.173 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405aa721]
2019-02-03 15:08:37.174 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:37.174 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eec6af6]
2019-02-03 15:08:37.175 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1352740321 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:37.175 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:08:37.175 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:08:37.176 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:08:37.177 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eec6af6]
2019-02-03 15:08:37.177 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eec6af6]
2019-02-03 15:08:37.177 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eec6af6]
2019-02-03 15:08:37.178 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eec6af6]
2019-02-03 15:08:42.703 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:08:52.919 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:52.920 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:08:52.920 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:52.924 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:52.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:52.925 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:52.925 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:52.926 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:52.926 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:52.926 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:52.927 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:53.683 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:53.687 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.687 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:53.688 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:53.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.689 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:53.689 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:53.689 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.689 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:53.690 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:53.690 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d28eca9]
2019-02-03 15:08:53.691 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1782811284 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:53.692 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:08:53.692 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:08:53.693 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:08:53.695 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d28eca9]
2019-02-03 15:08:53.695 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d28eca9]
2019-02-03 15:08:53.695 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d28eca9]
2019-02-03 15:08:53.695 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d28eca9]
2019-02-03 15:08:53.697 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:53.697 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e98948c]
2019-02-03 15:08:53.698 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@395282841 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:53.698 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:08:53.699 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:08:53.700 DEBUG --- [http-nio-9999-exec-8] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:08:53.700 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e98948c]
2019-02-03 15:08:53.700 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e98948c]
2019-02-03 15:08:53.701 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e98948c]
2019-02-03 15:08:53.702 DEBUG --- [http-nio-9999-exec-8] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e98948c]
2019-02-03 15:08:53.734 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:53.735 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:08:53.735 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.736 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.737 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:53.737 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:53.738 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.738 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:53.738 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:53.738 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:53.738 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:54.101 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:54.101 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:54.102 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:54.106 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:54.106 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:54.107 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:54.107 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:54.108 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:54.108 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:54.108 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:08:54.109 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:54.109 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f8d1f9]
2019-02-03 15:08:54.109 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@475529243 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:54.110 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:08:54.110 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:08:54.111 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:08:54.112 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f8d1f9]
2019-02-03 15:08:54.112 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f8d1f9]
2019-02-03 15:08:54.113 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f8d1f9]
2019-02-03 15:08:54.113 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f8d1f9]
2019-02-03 15:08:54.114 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:54.114 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29116961]
2019-02-03 15:08:54.114 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1193966008 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:54.115 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:08:54.115 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:08:54.116 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:08:54.116 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29116961]
2019-02-03 15:08:54.116 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29116961]
2019-02-03 15:08:54.117 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29116961]
2019-02-03 15:08:54.117 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29116961]
2019-02-03 15:08:54.118 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:54.118 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200cc6e]
2019-02-03 15:08:54.119 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1933031338 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:54.119 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:08:54.119 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:08:54.120 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:08:54.120 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200cc6e]
2019-02-03 15:08:54.121 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200cc6e]
2019-02-03 15:08:54.121 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200cc6e]
2019-02-03 15:08:54.121 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200cc6e]
2019-02-03 15:08:54.122 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:54.122 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc577b2]
2019-02-03 15:08:54.122 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@300851318 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:54.122 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:08:54.123 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:08:54.124 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:08:54.124 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc577b2]
2019-02-03 15:08:54.124 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc577b2]
2019-02-03 15:08:54.125 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc577b2]
2019-02-03 15:08:54.125 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc577b2]
2019-02-03 15:08:54.126 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:08:54.126 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ef7102]
2019-02-03 15:08:54.126 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@841139385 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:08:54.126 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:08:54.127 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:08:54.127 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:08:54.127 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ef7102]
2019-02-03 15:08:54.128 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ef7102]
2019-02-03 15:08:54.128 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ef7102]
2019-02-03 15:08:54.128 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ef7102]
2019-02-03 15:08:58.525 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:08:58.525 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:08:58.526 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:58.526 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:58.527 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:08:58.527 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:08:58.527 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:58.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:08:58.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:08:58.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:08:58.531 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:09:12.705 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:09:40.872 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:09:40.874 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.875 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.876 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:09:40.876 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:09:40.876 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.877 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:09:40.877 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:09:40.877 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.878 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:09:40.879 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:40.879 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ad6e92]
2019-02-03 15:09:40.880 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1457065388 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:40.880 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:09:40.883 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:09:40.885 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:09:40.885 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ad6e92]
2019-02-03 15:09:40.886 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ad6e92]
2019-02-03 15:09:40.886 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ad6e92]
2019-02-03 15:09:40.886 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ad6e92]
2019-02-03 15:09:40.887 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:40.888 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b846b4]
2019-02-03 15:09:40.888 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@992279261 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:40.889 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:09:40.889 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:09:40.890 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:09:40.891 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b846b4]
2019-02-03 15:09:40.891 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b846b4]
2019-02-03 15:09:40.891 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b846b4]
2019-02-03 15:09:40.891 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b846b4]
2019-02-03 15:09:40.938 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:09:40.938 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:09:40.938 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.939 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.939 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:09:40.939 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:09:40.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:09:40.941 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:09:40.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:40.942 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:09:41.290 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:09:41.291 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:41.291 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:41.293 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:09:41.293 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:09:41.295 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:41.295 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:09:41.296 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:09:41.296 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:41.296 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:09:41.296 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:41.297 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bffa5ea]
2019-02-03 15:09:41.297 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1347082035 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:41.298 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:09:41.299 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:09:41.300 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:09:41.300 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bffa5ea]
2019-02-03 15:09:41.301 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bffa5ea]
2019-02-03 15:09:41.301 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bffa5ea]
2019-02-03 15:09:41.301 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bffa5ea]
2019-02-03 15:09:41.302 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:41.303 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc3894d]
2019-02-03 15:09:41.303 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@775776316 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:41.303 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:09:41.304 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:09:41.304 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:09:41.305 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc3894d]
2019-02-03 15:09:41.305 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc3894d]
2019-02-03 15:09:41.305 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc3894d]
2019-02-03 15:09:41.305 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc3894d]
2019-02-03 15:09:41.306 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:41.306 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257eae32]
2019-02-03 15:09:41.307 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@215327985 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:41.307 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:09:41.308 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:09:41.309 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:09:41.310 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257eae32]
2019-02-03 15:09:41.310 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257eae32]
2019-02-03 15:09:41.310 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257eae32]
2019-02-03 15:09:41.311 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257eae32]
2019-02-03 15:09:41.311 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:41.312 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae5d859]
2019-02-03 15:09:41.312 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@488445076 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:41.312 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:09:41.312 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:09:41.313 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:09:41.313 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae5d859]
2019-02-03 15:09:41.313 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae5d859]
2019-02-03 15:09:41.314 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae5d859]
2019-02-03 15:09:41.314 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae5d859]
2019-02-03 15:09:41.314 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:09:41.315 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd82146]
2019-02-03 15:09:41.315 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@183655362 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:09:41.315 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:09:41.315 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:09:41.316 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:09:41.316 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd82146]
2019-02-03 15:09:41.317 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd82146]
2019-02-03 15:09:41.317 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd82146]
2019-02-03 15:09:41.317 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd82146]
2019-02-03 15:09:42.706 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:09:46.228 INFO  --- [http-nio-9999-exec-6] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:09:46.228 INFO  --- [http-nio-9999-exec-6] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:09:46.228 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:46.228 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:46.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:09:46.229 DEBUG --- [http-nio-9999-exec-6] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:09:46.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:46.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:09:46.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:09:46.229 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:46.230 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:09:49.840 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:09:49.841 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:09:49.841 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:49.841 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:49.842 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:09:49.842 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:09:49.843 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:49.843 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:09:49.844 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:09:49.844 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:49.844 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:09:55.336 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:09:55.337 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:09:55.337 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:55.337 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:55.338 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:09:55.338 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:09:55.338 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:55.339 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:09:55.339 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:09:55.339 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:09:55.339 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:09.740 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:09.741 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:10:09.742 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.742 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.743 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:09.743 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:09.743 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.744 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:09.745 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:09.745 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.745 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:09.806 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:09.807 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.808 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.809 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:09.809 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:09.810 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.810 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:09.810 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:09.811 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.811 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:09.812 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:09.812 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fcde005]
2019-02-03 15:10:09.813 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1203939418 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:09.813 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:10:09.814 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:10:09.815 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:10:09.816 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fcde005]
2019-02-03 15:10:09.816 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fcde005]
2019-02-03 15:10:09.816 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fcde005]
2019-02-03 15:10:09.817 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fcde005]
2019-02-03 15:10:09.818 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:09.819 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5cef7c]
2019-02-03 15:10:09.819 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@944160847 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:09.819 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:10:09.820 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:10:09.821 DEBUG --- [http-nio-9999-exec-4] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:10:09.821 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5cef7c]
2019-02-03 15:10:09.822 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5cef7c]
2019-02-03 15:10:09.822 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5cef7c]
2019-02-03 15:10:09.822 DEBUG --- [http-nio-9999-exec-4] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5cef7c]
2019-02-03 15:10:09.849 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:09.850 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:10:09.854 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.854 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.854 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:09.855 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.855 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:09.855 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:09.856 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:09.856 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:09.857 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:10.413 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:10.414 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:10.414 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:10.415 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:10.415 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:10.415 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:10.416 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:10.416 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:10.417 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:10.417 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:10.418 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:10.418 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601f60aa]
2019-02-03 15:10:10.419 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@505718790 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:10.419 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:10:10.420 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:10:10.421 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:10:10.422 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601f60aa]
2019-02-03 15:10:10.422 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601f60aa]
2019-02-03 15:10:10.423 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601f60aa]
2019-02-03 15:10:10.423 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601f60aa]
2019-02-03 15:10:10.424 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:10.424 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1933636a]
2019-02-03 15:10:10.425 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@95850207 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:10.425 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:10:10.426 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:10:10.427 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:10:10.427 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1933636a]
2019-02-03 15:10:10.428 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1933636a]
2019-02-03 15:10:10.428 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1933636a]
2019-02-03 15:10:10.428 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1933636a]
2019-02-03 15:10:10.429 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:10.430 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ef6c23]
2019-02-03 15:10:10.430 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@988263212 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:10.430 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:10:10.431 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:10:10.433 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:10:10.433 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ef6c23]
2019-02-03 15:10:10.433 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ef6c23]
2019-02-03 15:10:10.434 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ef6c23]
2019-02-03 15:10:10.434 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ef6c23]
2019-02-03 15:10:10.435 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:10.435 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00ffa1]
2019-02-03 15:10:10.435 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1496535922 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:10.437 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:10:10.438 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:10:10.439 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:10:10.440 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00ffa1]
2019-02-03 15:10:10.440 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00ffa1]
2019-02-03 15:10:10.441 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00ffa1]
2019-02-03 15:10:10.442 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00ffa1]
2019-02-03 15:10:10.443 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:10.443 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664a3d2c]
2019-02-03 15:10:10.444 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1676793092 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:10.445 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:10:10.445 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:10:10.447 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:10:10.447 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664a3d2c]
2019-02-03 15:10:10.448 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664a3d2c]
2019-02-03 15:10:10.448 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664a3d2c]
2019-02-03 15:10:10.448 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664a3d2c]
2019-02-03 15:10:12.710 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:10:26.140 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:26.141 INFO  --- [http-nio-9999-exec-3] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:10:26.141 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:26.142 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:26.142 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:26.142 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:26.143 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:26.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:26.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:26.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:26.145 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:40.934 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:40.935 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:40.935 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:40.936 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:40.936 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:40.937 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:40.937 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:40.937 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:40.938 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:40.938 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:40.941 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:40.943 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398407c5]
2019-02-03 15:10:40.943 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1921561969 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:40.944 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:10:40.944 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:10:40.946 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:10:40.946 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398407c5]
2019-02-03 15:10:40.947 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398407c5]
2019-02-03 15:10:40.947 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398407c5]
2019-02-03 15:10:40.947 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398407c5]
2019-02-03 15:10:40.948 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:40.949 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@486a9da2]
2019-02-03 15:10:40.949 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@75348094 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:40.950 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:10:40.951 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:10:40.951 DEBUG --- [http-nio-9999-exec-2] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:10:40.952 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@486a9da2]
2019-02-03 15:10:40.952 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@486a9da2]
2019-02-03 15:10:40.953 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@486a9da2]
2019-02-03 15:10:40.953 DEBUG --- [http-nio-9999-exec-2] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@486a9da2]
2019-02-03 15:10:41.199 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:41.200 INFO  --- [http-nio-9999-exec-9] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:10:41.200 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.200 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.201 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:41.201 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:41.201 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.202 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:41.202 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:41.202 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.202 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:41.623 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:41.624 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.625 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.625 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:41.625 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:41.626 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.626 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:41.626 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:41.626 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:41.627 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:10:41.627 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:41.631 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6de926ca]
2019-02-03 15:10:41.631 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1139838817 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:41.632 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:10:41.632 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:10:41.633 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:10:41.633 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6de926ca]
2019-02-03 15:10:41.633 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6de926ca]
2019-02-03 15:10:41.634 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6de926ca]
2019-02-03 15:10:41.634 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6de926ca]
2019-02-03 15:10:41.634 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:41.635 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc32cfd]
2019-02-03 15:10:41.635 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@756999825 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:41.635 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:10:41.635 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:10:41.636 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:10:41.636 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc32cfd]
2019-02-03 15:10:41.637 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc32cfd]
2019-02-03 15:10:41.637 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc32cfd]
2019-02-03 15:10:41.637 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc32cfd]
2019-02-03 15:10:41.638 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:41.638 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24881df6]
2019-02-03 15:10:41.638 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@841724280 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:41.638 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:10:41.639 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:10:41.639 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:10:41.639 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24881df6]
2019-02-03 15:10:41.639 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24881df6]
2019-02-03 15:10:41.640 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24881df6]
2019-02-03 15:10:41.640 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24881df6]
2019-02-03 15:10:41.641 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:41.642 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1768982]
2019-02-03 15:10:41.642 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1507925000 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:41.643 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:10:41.643 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:10:41.644 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:10:41.645 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1768982]
2019-02-03 15:10:41.645 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1768982]
2019-02-03 15:10:41.645 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1768982]
2019-02-03 15:10:41.645 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1768982]
2019-02-03 15:10:41.646 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:10:41.646 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c2e10]
2019-02-03 15:10:41.646 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@418444926 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:10:41.647 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:10:41.647 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:10:41.648 DEBUG --- [http-nio-9999-exec-10] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:10:41.648 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c2e10]
2019-02-03 15:10:41.649 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c2e10]
2019-02-03 15:10:41.649 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c2e10]
2019-02-03 15:10:41.649 DEBUG --- [http-nio-9999-exec-10] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c2e10]
2019-02-03 15:10:42.711 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:10:45.366 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:10:45.366 INFO  --- [http-nio-9999-exec-7] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:10:45.366 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:45.367 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:45.367 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:10:45.367 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:10:45.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:45.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:10:45.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:10:45.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:10:45.368 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:12.713 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:11:27.887 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:27.888 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:11:27.888 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.889 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.890 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:27.890 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:27.890 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.891 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:27.891 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:27.891 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.891 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:27.898 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:27.899 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.899 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.900 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:27.900 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:27.900 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:27.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:27.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:27.902 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:27.903 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:27.904 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e21b65]
2019-02-03 15:11:27.904 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@654112832 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:27.905 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:11:27.906 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:11:27.907 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:11:27.907 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e21b65]
2019-02-03 15:11:27.908 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e21b65]
2019-02-03 15:11:27.909 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e21b65]
2019-02-03 15:11:27.909 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e21b65]
2019-02-03 15:11:27.910 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:27.910 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c229acb]
2019-02-03 15:11:27.911 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@154070421 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:27.912 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:11:27.912 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:11:27.914 DEBUG --- [http-nio-9999-exec-5] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:11:27.914 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c229acb]
2019-02-03 15:11:27.915 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c229acb]
2019-02-03 15:11:27.915 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c229acb]
2019-02-03 15:11:27.915 DEBUG --- [http-nio-9999-exec-5] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c229acb]
2019-02-03 15:11:28.686 INFO  --- [http-nio-9999-exec-3] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:28.687 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:28.687 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:28.687 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:28.687 DEBUG --- [http-nio-9999-exec-3] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:28.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:28.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:28.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:28.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:28.688 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:28.689 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:28.689 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5798e858]
2019-02-03 15:11:28.689 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@618441960 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:28.690 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT a.albumId, a.albumName, a.createUser, a.createDate, a.coverPhotoId, a.description, a.isPublic, a.isEffective FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createDate DESC limit ?,? 
2019-02-03 15:11:28.691 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:11:28.692 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.findAlbumMapListByQuery Line:159 - <==      Total: 4
2019-02-03 15:11:28.693 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5798e858]
2019-02-03 15:11:28.693 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5798e858]
2019-02-03 15:11:28.694 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5798e858]
2019-02-03 15:11:28.694 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5798e858]
2019-02-03 15:11:28.695 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:28.696 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a9e447]
2019-02-03 15:11:28.696 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2110949462 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:28.696 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM album a WHERE a.albumName like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:11:28.697 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:11:28.697 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.AlbumMapper.countAlbumMapListByQuery Line:159 - <==      Total: 1
2019-02-03 15:11:28.698 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a9e447]
2019-02-03 15:11:28.698 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a9e447]
2019-02-03 15:11:28.698 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a9e447]
2019-02-03 15:11:28.699 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a9e447]
2019-02-03 15:11:28.700 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:28.700 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458318]
2019-02-03 15:11:28.700 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1580465280 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:28.701 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:11:28.702 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:11:28.703 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:11:28.703 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458318]
2019-02-03 15:11:28.704 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458318]
2019-02-03 15:11:28.705 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458318]
2019-02-03 15:11:28.705 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458318]
2019-02-03 15:11:28.706 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:28.707 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35246c39]
2019-02-03 15:11:28.707 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@521442344 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:28.708 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:11:28.708 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:11:28.709 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:11:28.709 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35246c39]
2019-02-03 15:11:28.709 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35246c39]
2019-02-03 15:11:28.710 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35246c39]
2019-02-03 15:11:28.710 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35246c39]
2019-02-03 15:11:28.710 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:28.710 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24a06a]
2019-02-03 15:11:28.711 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@707189245 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:28.711 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==>  Preparing: SELECT a.photoId, a.photoName, a.createUser, a.createDate, a.isPublic, a.isEffective, a.photoUrl FROM photo a WHERE a.photoId = ? 
2019-02-03 15:11:28.711 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - ==> Parameters: 2970294107818343(Long)
2019-02-03 15:11:28.712 DEBUG --- [http-nio-9999-exec-3] com.example.acm.mapper.PhotoMapper.findPhotoListByPhotoId Line:159 - <==      Total: 1
2019-02-03 15:11:28.712 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24a06a]
2019-02-03 15:11:28.713 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24a06a]
2019-02-03 15:11:28.713 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24a06a]
2019-02-03 15:11:28.713 DEBUG --- [http-nio-9999-exec-3] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24a06a]
2019-02-03 15:11:32.244 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:32.245 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:11:32.245 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:32.245 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:32.249 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:32.249 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:32.250 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:32.251 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:32.251 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:32.251 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:32.252 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:42.714 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:11:47.840 INFO  --- [http-nio-9999-exec-10] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:47.840 INFO  --- [http-nio-9999-exec-10] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:11:47.841 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:47.844 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:47.845 DEBUG --- [http-nio-9999-exec-10] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:47.845 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:47.846 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:47.847 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:47.847 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:47.847 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:47.847 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:52.654 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:52.654 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:52.655 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:11:52.655 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.656 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.656 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.656 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:52.656 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:52.657 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.656 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.657 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:52.657 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:52.658 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:52.658 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.659 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:52.659 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:52.659 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.660 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:52.660 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:52.660 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:52.660 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6b76e3]
2019-02-03 15:11:52.660 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.660 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:11:52.661 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@497396135 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:52.661 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:11:52.662 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:11:52.663 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:11:52.664 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6b76e3]
2019-02-03 15:11:52.664 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6b76e3]
2019-02-03 15:11:52.664 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6b76e3]
2019-02-03 15:11:52.665 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6b76e3]
2019-02-03 15:11:52.667 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:11:52.667 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d03aeb1]
2019-02-03 15:11:52.668 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1395161052 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:11:52.669 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:11:52.669 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:11:52.670 DEBUG --- [http-nio-9999-exec-1] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:11:52.671 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d03aeb1]
2019-02-03 15:11:52.671 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d03aeb1]
2019-02-03 15:11:52.671 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d03aeb1]
2019-02-03 15:11:52.672 DEBUG --- [http-nio-9999-exec-1] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d03aeb1]
2019-02-03 15:11:52.783 INFO  --- [http-nio-9999-exec-5] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:11:52.783 INFO  --- [http-nio-9999-exec-5] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:11:52.783 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.784 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.784 DEBUG --- [http-nio-9999-exec-5] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:11:52.784 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:11:52.785 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.786 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:11:52.786 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:11:52.787 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:11:52.787 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:12.715 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:12:17.660 INFO  --- [http-nio-9999-exec-8] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:12:17.660 INFO  --- [http-nio-9999-exec-8] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:12:17.661 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:17.661 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:17.665 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:12:17.665 DEBUG --- [http-nio-9999-exec-8] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:12:17.666 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:17.667 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:12:17.667 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:12:17.667 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:17.668 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:18.237 INFO  --- [http-nio-9999-exec-2] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:12:18.237 INFO  --- [http-nio-9999-exec-2] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:12:18.237 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.241 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.242 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:12:18.242 DEBUG --- [http-nio-9999-exec-2] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:12:18.242 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.243 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:12:18.243 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:12:18.243 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.244 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:18.318 INFO  --- [http-nio-9999-exec-9] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:12:18.318 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.319 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.319 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:12:18.319 DEBUG --- [http-nio-9999-exec-9] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:12:18.319 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:12:18.320 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:12:18.321 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:18.321 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:18.321 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:12:18.322 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d889383]
2019-02-03 15:12:18.322 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1918828341 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:12:18.322 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:12:18.323 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:12:18.324 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:12:18.325 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d889383]
2019-02-03 15:12:18.325 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d889383]
2019-02-03 15:12:18.326 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d889383]
2019-02-03 15:12:18.326 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d889383]
2019-02-03 15:12:18.327 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:12:18.328 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6310a808]
2019-02-03 15:12:18.328 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@83386169 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:12:18.328 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:12:18.328 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:12:18.329 DEBUG --- [http-nio-9999-exec-9] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:12:18.329 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6310a808]
2019-02-03 15:12:18.330 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6310a808]
2019-02-03 15:12:18.330 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6310a808]
2019-02-03 15:12:18.330 DEBUG --- [http-nio-9999-exec-9] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6310a808]
2019-02-03 15:12:29.618 INFO  --- [http-nio-9999-exec-7] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:12:29.621 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.622 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.623 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:12:29.623 DEBUG --- [http-nio-9999-exec-7] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:12:29.623 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.624 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:12:29.624 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:12:29.624 INFO  --- [http-nio-9999-exec-4] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:12:29.624 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.624 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:29.624 INFO  --- [http-nio-9999-exec-4] com.example.acm.controller.userController Line:91  - ----------------uID3311cdbccd23406f89e637ed1ceafcc7
2019-02-03 15:12:29.625 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.625 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:12:29.625 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6293f7c4]
2019-02-03 15:12:29.625 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.626 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:12:29.626 DEBUG --- [http-nio-9999-exec-4] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:12:29.627 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.627 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@1119518948 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:12:29.627 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==>  Preparing: SELECT a.classId, a.className, a.isEffective, a.updateTime, a.createTime, a.createBy FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? ORDER BY a.createTime DESC limit ?,? 
2019-02-03 15:12:29.627 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:12:29.627 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:12:29.627 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - ==> Parameters: (String), 1(Integer), 0(Integer), 10(Integer)
2019-02-03 15:12:29.627 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.628 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:29.628 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.findClassificationMapListByQuery Line:159 - <==      Total: 3
2019-02-03 15:12:29.629 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6293f7c4]
2019-02-03 15:12:29.629 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6293f7c4]
2019-02-03 15:12:29.629 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6293f7c4]
2019-02-03 15:12:29.630 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6293f7c4]
2019-02-03 15:12:29.631 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:97  - Creating a new SqlSession
2019-02-03 15:12:29.631 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:128 - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b497d18]
2019-02-03 15:12:29.632 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.transaction.SpringManagedTransaction Line:87  - JDBC Connection [HikariProxyConnection@2133032502 wrapping com.mysql.jdbc.JDBC4Connection@f3faaa8] will be managed by Spring
2019-02-03 15:12:29.633 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==>  Preparing: SELECT count(*) FROM classification a WHERE a.className like CONCAT('%', ?, '%') AND a.isEffective=? 
2019-02-03 15:12:29.633 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - ==> Parameters: (String), 1(Integer)
2019-02-03 15:12:29.635 DEBUG --- [http-nio-9999-exec-7] com.example.acm.mapper.ClassificationMapper.countClassificationListByQuery Line:159 - <==      Total: 1
2019-02-03 15:12:29.635 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:186 - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b497d18]
2019-02-03 15:12:29.635 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:284 - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b497d18]
2019-02-03 15:12:29.635 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:310 - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b497d18]
2019-02-03 15:12:29.636 DEBUG --- [http-nio-9999-exec-7] org.mybatis.spring.SqlSessionUtils Line:315 - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b497d18]
2019-02-03 15:12:29.761 INFO  --- [http-nio-9999-exec-1] com.example.acm.interceptor.AuthInterceptor Line:33  - -------------------------POST
2019-02-03 15:12:29.761 INFO  --- [http-nio-9999-exec-1] com.example.acm.controller.userController Line:91  - ----------------uIDadd1173a57f14aedaddb38788e1535eb
2019-02-03 15:12:29.762 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.RedisChannelHandler Line:76  - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.762 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.762 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2019-02-03 15:12:29.762 DEBUG --- [http-nio-9999-exec-1] io.lettuce.core.protocol.DefaultEndpoint Line:76  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, epid=0x1] write() done
2019-02-03 15:12:29.763 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandEncoder Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.763 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:86  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2019-02-03 15:12:29.766 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler Line:81  - [channel=0xf6804915, /127.0.0.1:63666 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
2019-02-03 15:12:29.767 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:76  - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2019-02-03 15:12:29.767 DEBUG --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.RedisStateMachine Line:81  - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2019-02-03 15:12:42.715 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:13:12.716 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:13:42.717 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:14:12.719 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:14:42.720 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:15:12.722 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:15:42.723 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:16:12.724 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:16:42.725 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:17:12.726 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:17:42.727 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:18:12.729 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:18:42.729 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:19:12.731 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:19:42.732 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:20:12.734 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:20:42.735 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:21:12.735 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:21:42.736 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:22:12.737 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:22:42.738 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:23:12.739 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:23:42.740 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:24:12.741 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:24:42.742 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:25:12.743 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:25:42.744 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:26:12.746 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:26:42.747 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:27:12.748 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:27:42.752 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:28:12.753 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:28:42.754 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:29:12.756 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:29:42.759 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:30:12.760 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:30:42.760 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:31:12.761 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:31:42.762 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:32:12.763 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:32:42.764 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:33:08.474 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@f3faaa8: (connection has passed maxLifetime)
2019-02-03 15:33:08.479 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5f771542
2019-02-03 15:33:12.764 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:33:28.929 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2e5c94cf: (connection has passed maxLifetime)
2019-02-03 15:33:28.937 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6c6658db
2019-02-03 15:33:39.598 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4fae4718: (connection has passed maxLifetime)
2019-02-03 15:33:39.602 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@732bd40f
2019-02-03 15:33:40.452 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@346500e1: (connection has passed maxLifetime)
2019-02-03 15:33:40.454 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@755247c
2019-02-03 15:33:41.651 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7bbdbd23: (connection has passed maxLifetime)
2019-02-03 15:33:41.657 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2df79ed7
2019-02-03 15:33:42.765 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:33:44.815 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@795c0e3a: (connection has passed maxLifetime)
2019-02-03 15:33:44.821 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@524811f6
2019-02-03 15:33:49.764 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1b437c13: (connection has passed maxLifetime)
2019-02-03 15:33:49.771 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@37fb6dff
2019-02-03 15:33:50.011 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@247669df: (connection has passed maxLifetime)
2019-02-03 15:33:50.017 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@151d69b
2019-02-03 15:34:08.259 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2c63472e: (connection has passed maxLifetime)
2019-02-03 15:34:08.266 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3d55c4a5
2019-02-03 15:34:12.766 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:34:13.844 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@f4606b2: (connection has passed maxLifetime)
2019-02-03 15:34:13.851 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@21780881
2019-02-03 15:34:42.768 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:35:12.769 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:35:42.771 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:36:12.772 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:36:42.777 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:37:12.778 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:37:42.780 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:38:12.781 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:38:42.782 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:39:12.784 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:39:42.785 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:40:12.785 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:40:42.786 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:41:12.788 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:41:42.789 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:42:12.790 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:42:42.792 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:43:12.793 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:43:42.794 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:44:12.795 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:44:42.796 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:45:12.796 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:45:42.797 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:46:12.798 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:46:42.799 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:47:12.801 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:47:42.802 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:48:12.803 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:48:42.804 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:49:12.807 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:49:42.808 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:50:12.809 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:50:42.810 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:51:12.812 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:51:42.813 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:52:12.814 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:52:42.814 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:53:12.816 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:53:42.817 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:54:12.821 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:54:42.822 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:55:12.823 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:55:42.824 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:56:12.825 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:56:42.826 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:57:12.828 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:57:42.828 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:58:12.830 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:58:42.831 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:59:12.832 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 15:59:42.834 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:00:12.835 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:00:42.836 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:01:12.840 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:01:42.842 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:02:12.847 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:02:32.878 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5f771542: (connection has passed maxLifetime)
2019-02-03 16:02:32.888 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5807529
2019-02-03 16:02:42.847 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:02:52.050 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6c6658db: (connection has passed maxLifetime)
2019-02-03 16:02:52.057 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@636dd266
2019-02-03 16:03:02.433 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2df79ed7: (connection has passed maxLifetime)
2019-02-03 16:03:02.440 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1c223f0a
2019-02-03 16:03:03.407 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@755247c: (connection has passed maxLifetime)
2019-02-03 16:03:03.413 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6833ac72
2019-02-03 16:03:12.848 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:03:14.217 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@524811f6: (connection has passed maxLifetime)
2019-02-03 16:03:14.223 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5fb2b62
2019-02-03 16:03:21.106 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@37fb6dff: (connection has passed maxLifetime)
2019-02-03 16:03:21.113 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@120f0ded
2019-02-03 16:03:24.366 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@732bd40f: (connection has passed maxLifetime)
2019-02-03 16:03:24.370 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6610b447
2019-02-03 16:03:42.849 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:03:46.974 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@151d69b: (connection has passed maxLifetime)
2019-02-03 16:03:46.982 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@32d9e50
2019-02-03 16:03:50.994 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@21780881: (connection has passed maxLifetime)
2019-02-03 16:03:50.996 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@77a3866f
2019-02-03 16:03:53.353 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3d55c4a5: (connection has passed maxLifetime)
2019-02-03 16:03:53.356 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6ab31d06
2019-02-03 16:04:12.849 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:04:42.851 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:05:12.853 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:05:42.855 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:06:12.856 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:06:42.860 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:07:12.862 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:07:42.862 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:08:12.864 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:08:42.866 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:09:12.867 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:09:42.868 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:10:12.870 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:10:42.871 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:11:12.873 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:11:42.874 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:12:12.876 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:12:42.878 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:13:12.878 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:13:42.879 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:14:12.880 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:14:42.881 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:15:12.883 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:15:42.884 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:16:12.885 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:16:42.886 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:17:12.887 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:17:42.889 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:18:12.890 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:18:42.891 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:19:12.893 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:19:42.894 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:20:12.896 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:20:42.898 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:21:12.899 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:21:42.901 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:22:12.902 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:22:42.903 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:23:12.903 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:23:42.905 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:24:12.907 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:24:42.908 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:25:12.910 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:25:42.911 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:26:12.913 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:26:42.914 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:27:12.915 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:27:42.916 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:28:12.916 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:28:42.918 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:29:12.920 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:29:42.922 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:30:12.923 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:30:42.924 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:31:12.925 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:31:42.927 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:32:12.927 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:32:15.386 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5807529: (connection has passed maxLifetime)
2019-02-03 16:32:15.393 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1d2c8e6
2019-02-03 16:32:28.971 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6833ac72: (connection has passed maxLifetime)
2019-02-03 16:32:28.976 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1a06c995
2019-02-03 16:32:42.929 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:32:47.035 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@636dd266: (connection has passed maxLifetime)
2019-02-03 16:32:47.044 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@67415c0c
2019-02-03 16:32:54.731 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5fb2b62: (connection has passed maxLifetime)
2019-02-03 16:32:54.737 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@971fc0e
2019-02-03 16:32:55.122 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6610b447: (connection has passed maxLifetime)
2019-02-03 16:32:55.124 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7d753b5c
2019-02-03 16:33:00.843 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1c223f0a: (connection has passed maxLifetime)
2019-02-03 16:33:00.850 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@554ee2fb
2019-02-03 16:33:04.711 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@32d9e50: (connection has passed maxLifetime)
2019-02-03 16:33:04.718 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@21165517
2019-02-03 16:33:12.930 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:33:17.317 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@120f0ded: (connection has passed maxLifetime)
2019-02-03 16:33:17.325 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@52a3a636
2019-02-03 16:33:23.300 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@77a3866f: (connection has passed maxLifetime)
2019-02-03 16:33:23.302 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3e96e181
2019-02-03 16:33:42.932 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:33:51.252 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6ab31d06: (connection has passed maxLifetime)
2019-02-03 16:33:51.256 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6bc76f2b
2019-02-03 16:34:12.933 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:34:42.934 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:35:12.936 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:35:42.937 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:36:12.939 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:36:42.940 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:37:12.940 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:37:42.941 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:38:12.942 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:38:42.943 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:39:12.945 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:39:42.946 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:40:12.948 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:40:42.949 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:41:12.950 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:41:42.951 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:42:12.952 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:42:42.954 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:43:12.954 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:43:42.955 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:44:12.956 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:44:42.957 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:45:12.959 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:45:42.961 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:46:12.962 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:46:42.963 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:47:12.964 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:47:42.965 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:48:12.966 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:48:42.967 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:49:12.968 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:49:42.969 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:50:12.971 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:50:42.973 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:51:12.975 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:51:42.975 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:52:12.977 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:52:42.978 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:53:12.979 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:53:42.981 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:54:12.981 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:54:42.982 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:55:12.983 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:55:42.984 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:56:12.985 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:56:42.986 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:57:12.988 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:57:42.990 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:58:12.992 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:58:42.992 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:59:12.994 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 16:59:42.995 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:00:12.998 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:00:42.999 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:01:13.001 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:01:43.002 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:01:49.099 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1d2c8e6: (connection has passed maxLifetime)
2019-02-03 17:01:49.106 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@43c0e67b
2019-02-03 17:02:08.782 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1a06c995: (connection has passed maxLifetime)
2019-02-03 17:02:08.788 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@11629320
2019-02-03 17:02:13.004 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:02:14.468 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7d753b5c: (connection has passed maxLifetime)
2019-02-03 17:02:14.471 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@59d4353e
2019-02-03 17:02:33.176 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@67415c0c: (connection has passed maxLifetime)
2019-02-03 17:02:33.179 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@585861f4
2019-02-03 17:02:35.518 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@554ee2fb: (connection has passed maxLifetime)
2019-02-03 17:02:35.521 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2c8d4c3f
2019-02-03 17:02:43.006 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:02:48.919 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@971fc0e: (connection has passed maxLifetime)
2019-02-03 17:02:48.921 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3492ecb
2019-02-03 17:02:57.683 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@21165517: (connection has passed maxLifetime)
2019-02-03 17:02:57.690 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5106c081
2019-02-03 17:03:02.007 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3e96e181: (connection has passed maxLifetime)
2019-02-03 17:03:02.014 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@25daa386
2019-02-03 17:03:10.118 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@52a3a636: (connection has passed maxLifetime)
2019-02-03 17:03:10.125 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@32bf6636
2019-02-03 17:03:13.006 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:03:41.896 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6bc76f2b: (connection has passed maxLifetime)
2019-02-03 17:03:41.903 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@fc0a9ad
2019-02-03 17:03:43.007 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:04:13.008 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:04:43.010 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:05:13.012 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:05:43.012 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:06:13.013 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:06:43.015 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:07:13.016 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:07:43.017 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:08:13.017 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:08:43.019 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:09:13.020 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:09:43.021 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 17:10:13.021 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 20:10:42.238 WARN  --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:758 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h29s1ms694µs294ns).
2019-02-03 20:10:42.259 DEBUG --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool Line:404 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2019-02-03 20:10:42.276 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@43c0e67b: (connection has passed maxLifetime)
2019-02-03 20:10:42.282 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@11629320: (connection has passed maxLifetime)
2019-02-03 20:10:42.295 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@59d4353e: (connection has passed maxLifetime)
2019-02-03 20:10:42.295 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2c8d4c3f: (connection has passed maxLifetime)
2019-02-03 20:10:42.296 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@585861f4: (connection has passed maxLifetime)
2019-02-03 20:10:42.296 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@25daa386: (connection has passed maxLifetime)
2019-02-03 20:10:42.297 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@32bf6636: (connection has passed maxLifetime)
2019-02-03 20:10:42.297 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5106c081: (connection has passed maxLifetime)
2019-02-03 20:10:42.297 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3492ecb: (connection has passed maxLifetime)
2019-02-03 20:10:42.298 DEBUG --- [HikariPool-1 connection closer] com.zaxxer.hikari.pool.PoolBase Line:127 - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@fc0a9ad: (connection has passed maxLifetime)
2019-02-03 20:10:42.318 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2a405ee0
2019-02-03 20:10:42.432 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5ee70f57
2019-02-03 20:10:42.468 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3aa7351e
2019-02-03 20:10:42.489 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@b23414f
2019-02-03 20:10:42.497 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3f475598
2019-02-03 20:10:42.548 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@38cb1618
2019-02-03 20:10:42.556 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2a871f71
2019-02-03 20:10:42.570 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@427952fc
2019-02-03 20:10:42.574 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@184eeebf
2019-02-03 20:10:42.579 DEBUG --- [HikariPool-1 connection adder] com.zaxxer.hikari.pool.HikariPool Line:702 - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@585d6792
